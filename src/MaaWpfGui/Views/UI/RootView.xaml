<hc:Window
    x:Class="MaaWpfGui.Views.UI.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
    xmlns:controls="clr-namespace:MaaWpfGui.Styles.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:helper="clr-namespace:MaaWpfGui.Helper"
    xmlns:local="clr-namespace:MaaWpfGui.Views.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:ui="clr-namespace:MaaWpfGui.ViewModels.UI"
    Title="{Binding WindowTitle}"
    Width="800"
    Height="600"
    MinWidth="800"
    MinHeight="600"
    d:DataContext="{d:DesignInstance {x:Type ui:RootViewModel}}"
    Icon="../../newlogo.ico"
    ShowCloseButton="{Binding ShowCloseButton}"
    ShowTitle="False"
    Topmost="{Binding IsWindowTopMost}"
    mc:Ignorable="d">
    <hc:Window.NonClientAreaContent>
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Storyboard x:Key="SmoothColorCycle" RepeatBehavior="Forever">
                        <ColorAnimation
                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                            From="#FF4285F4"
                            To="#FFEA4335"
                            Duration="0:0:1" />
                        <ColorAnimation
                            BeginTime="0:0:1"
                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                            From="#FFEA4335"
                            To="#FFFBBC05"
                            Duration="0:0:1" />
                        <ColorAnimation
                            BeginTime="0:0:2"
                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                            From="#FFFBBC05"
                            To="#FF34A853"
                            Duration="0:0:1" />
                        <ColorAnimation
                            BeginTime="0:0:3"
                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                            From="#FF34A853"
                            To="#FF4285F4"
                            Duration="0:0:1" />
                    </Storyboard>

                    <Style x:Key="RainbowTextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Red" />
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard Storyboard="{StaticResource SmoothColorCycle}" />
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <Grid
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <controls:TextBlock
                        Grid.Row="0"
                        Margin="10,0,-5,0"
                        HorizontalAlignment="Left"
                        Style="{StaticResource RainbowTextBlockStyle}"
                        Text="{Binding WindowVersionUpdateInfo}"
                        Visibility="{c:Binding 'WindowVersionUpdateInfo.Length > 0'}" />
                    <controls:TextBlock
                        Grid.Row="1"
                        Margin="10,0,-5,0"
                        HorizontalAlignment="Left"
                        Style="{StaticResource RainbowTextBlockStyle}"
                        Text="{Binding WindowResourceUpdateInfo}"
                        Visibility="{c:Binding 'WindowResourceUpdateInfo.Length > 0'}" />
                </Grid>

                <hc:RunningBlock
                    Grid.Column="1"
                    Margin="10,-2.5"
                    HorizontalAlignment="Left"
                    BorderThickness="0"
                    Content="{Binding WindowTitle}"
                    IsHitTestVisible="False"
                    Runaway="False"
                    Speed="10"
                    Visibility="{c:Binding WindowTitleScrollable}" />
                <controls:TextBlock
                    Grid.Column="1"
                    Margin="10,0"
                    HorizontalAlignment="Left"
                    IsHitTestVisible="False"
                    Text="{Binding WindowTitle}"
                    TextWrapping="Wrap"
                    Visibility="{c:Binding !WindowTitleScrollable}" />
            </Grid>
            <Button
                Grid.Column="1"
                Width="46"
                Height="29"
                VerticalAlignment="Top"
                hc:BorderElement.CornerRadius="0"
                BorderThickness="0"
                Command="{s:Action ToggleTopMostCommand}"
                Content="ðŸ“Œ">
                <Button.Style>
                    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                        <Setter Property="Background" Value="{Binding OtherButtonBackground, RelativeSource={RelativeSource AncestorType=hc:Window}}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsWindowTopMost}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TitleBrush}" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding OtherButtonHoverBackground, RelativeSource={RelativeSource AncestorType=hc:Window}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </hc:Window.NonClientAreaContent>
    <Grid>
        <Rectangle Fill="{DynamicResource RegionBrush}" />
        <Image
            Name="BgImage"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            DataContext="{Binding Source={x:Static ui:SettingsViewModel.BackgroundSettings}}"
            Opacity="{c:Binding 'BackgroundOpacity / 100.0'}"
            RenderOptions.BitmapScalingMode="LowQuality"
            RenderOptions.CachingHint="Cache"
            Source="{c:Binding BackgroundImage}"
            Stretch="{c:Binding BackgroundImageStretchMode}">
            <Image.Effect>
                <BlurEffect Radius="{Binding BackgroundBlurEffectRadius}" />
            </Image.Effect>
        </Image>
        <DockPanel>
            <local:NotifyIcon x:Name="NotifyIcon" Visibility="Hidden" />
            <Grid>
                <TabControl
                    Background="{DynamicResource RegionBrushOpacity25}"
                    BorderThickness="0,1,0,0"
                    DisplayMemberPath="DisplayName"
                    ItemsSource="{Binding Items}"
                    SelectedItem="{s:RethrowingBinding ActiveItem}"
                    Style="{StaticResource TabControlInLine}">
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ContentControl
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                s:View.Model="{Binding}"
                                IsTabStop="False" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                    <TabControl.ItemContainerStyle>
                        <Style BasedOn="{StaticResource TabItemInLine}" TargetType="TabItem">
                            <Setter Property="Background" Value="{DynamicResource RegionBrushOpacity25}" />
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
                <ScrollViewer
                    Margin="0,27,0,0"
                    Padding="0,-2,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    d:Height="200"
                    d:Width="100"
                    VerticalScrollBarVisibility="Hidden">
                    <StackPanel Margin="0,0,0,5" hc:Growl.GrowlParent="True" />
                </ScrollViewer>
                <hc:GifImage
                    Width="100"
                    Margin="10"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    MouseLeftButtonDown="{s:Action DraggableElementMouseLeftButtonDown}"
                    MouseLeftButtonUp="{s:Action DraggableElementMouseLeftButtonUp}"
                    MouseMove="{s:Action DraggableElementMouseMove}"
                    MouseRightButtonDown="{s:Action ChangeGif}"
                    Uri="{Binding GifPath}"
                    Visibility="{c:Binding GifVisibility}" />
            </Grid>
        </DockPanel>
    </Grid>
    <hc:Interaction.Behaviors>
        <hc:TaskbarRebuildBehavior Element="{Binding ElementName=NotifyIcon}" />
    </hc:Interaction.Behaviors>
</hc:Window>
