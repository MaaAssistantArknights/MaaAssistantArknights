/* automatically generated by rust-bindgen 0.60.1 */

pub type AsstHandle = *mut ::std::os::raw::c_void;
pub type TaskId = ::std::os::raw::c_int;
pub type AsstApiCallback = ::std::option::Option<
    unsafe extern "C" fn(
        msg: ::std::os::raw::c_int,
        detail_json: *const ::std::os::raw::c_char,
        custom_arg: *mut ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub fn AsstLoadResource(path: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
#[allow(dead_code)]
extern "C" {
    pub fn AsstCreate() -> AsstHandle;
}
extern "C" {
    pub fn AsstCreateEx(
        callback: AsstApiCallback,
        custom_arg: *mut ::std::os::raw::c_void,
    ) -> AsstHandle;
}
extern "C" {
    pub fn AsstDestroy(handle: AsstHandle);
}
extern "C" {
    pub fn AsstConnect(
        handle: AsstHandle,
        adb_path: *const ::std::os::raw::c_char,
        address: *const ::std::os::raw::c_char,
        config: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AsstAppendTask(
        handle: AsstHandle,
        type_: *const ::std::os::raw::c_char,
        params: *const ::std::os::raw::c_char,
    ) -> TaskId;
}
extern "C" {
    pub fn AsstSetTaskParams(
        handle: AsstHandle,
        id: TaskId,
        params: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AsstStart(handle: AsstHandle) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AsstStop(handle: AsstHandle) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AsstCtrlerClick(
        handle: AsstHandle,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        block: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AsstGetImage(
        handle: AsstHandle,
        buff: *mut ::std::os::raw::c_void,
        buff_size: ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn AsstGetUUID(
        handle: AsstHandle,
        buff: *mut ::std::os::raw::c_char,
        buff_size: ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn AsstGetTasksList(
        handle: AsstHandle,
        buff: *mut TaskId,
        buff_size: ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn AsstGetNullSize() -> ::std::os::raw::c_ulonglong;
}
extern "C" {
    pub fn AsstGetVersion() -> *const ::std::os::raw::c_char;
}
#[allow(dead_code)]
extern "C" {
    pub fn AsstLog(level: *const ::std::os::raw::c_char, message: *const ::std::os::raw::c_char);
}
