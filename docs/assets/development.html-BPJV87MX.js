import{_ as h}from"./development-enable-vs-clang-format-B4WJrt15.js";import{_ as r,c as d,b as a,a as t,d as l,e as s,w as n,r as p,o}from"./app-DbvXOh0a.js";const k={};function g(c,i){const e=p("RouteLink");return o(),d("div",null,[i[5]||(i[5]=a('<h1 id="開発を開始" tabindex="-1"><a class="header-anchor" href="#開発を開始"><span>開発を開始</span></a></h1><h2 id="github-pull-request-プロセス概要" tabindex="-1"><a class="header-anchor" href="#github-pull-request-プロセス概要"><span>Github Pull Request プロセス概要</span></a></h2><h3 id="プログラミングの仕方がわからないので、jsonファイルやドキュメントなどを少し変更したいのですが、どうすればいいですか" tabindex="-1"><a class="header-anchor" href="#プログラミングの仕方がわからないので、jsonファイルやドキュメントなどを少し変更したいのですが、どうすればいいですか"><span>プログラミングの仕方がわからないので、JSONファイルやドキュメントなどを少し変更したいのですが、どうすればいいですか？</span></a></h3>',3)),t("p",null,[l(e,{to:"/ja-jp/develop/pr-tutorial.html"},{default:n(()=>i[0]||(i[0]=[s("「パラスちゃん」も理解できるGitHubのPull Requestの使用ガイド")])),_:1,__:[0]}),i[1]||(i[1]=s("へようこそ（純WebサイトのPRチュートリアル）"))]),i[6]||(i[6]=a(`<h3 id="プログラミングの仕方を知っていますが、github-c-に触れたことがありません、どうすればいいですか" tabindex="-1"><a class="header-anchor" href="#プログラミングの仕方を知っていますが、github-c-に触れたことがありません、どうすればいいですか"><span>プログラミングの仕方を知っていますが、GitHub/C++/...... に触れたことがありません、どうすればいいですか？</span></a></h3><ol><li><p>かなり前にフォークした場合は、まず自分のリポジトリの <code>Settings</code> の一番下で削除します</p></li><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA メインリポジトリ</a>を開き、<code>Fork</code> → <code>Create fork</code> をクリック</p></li><li><p>自身のリポジトリの dev ブランチをクローン（サブモジュール含む）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clone</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> --recurse-submodules</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;"> &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">リポジトリの</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> リン</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">ク</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">&gt;</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -b</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Visual Studio など <code>--recurse-submodules</code> パラメータに対応していない Git GUI を使用する場合、クローン後に以下を実行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> submodule</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> update</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> --init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div></li><li><p>事前ビルド済みサードパーティライブラリのダウンロード</p><p><strong>Python環境が必要（インストール方法は各自検索）</strong><br><em>（<a href="http://maadeps-download.py" target="_blank" rel="noopener noreferrer">maadeps-download.py</a> はプロジェクトルートに配置）</em></p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">python </span><span style="--shiki-light:#001080;--shiki-dark:#D8DEE9;">maadeps</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">download.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>開発環境の設定</p><ul><li><code>Visual Studio 2022 Community</code> をインストール時、<code>C++ によるデスクトップ開発</code> と <code>.NET デスクトップ開発</code> を選択必須</li></ul></li><li><p><code>MAA.sln</code> をダブルクリックで開き、Visual Studio にプロジェクトを自動ロード</p></li><li><p>VS の設定</p><ul><li>上部設定バーで <code>RelWithDebInfo</code> <code>x64</code> を選択（Release ビルド/ARM プラットフォームの場合は不要）</li><li><code>MaaWpfGui</code> 右クリック → プロパティ → デバッグ → ネイティブデバッグを有効化（C++ Core へのブレークポイント設定可能）</li></ul></li><li><p>これで自由に <s>改造</s> 開発を始められます</p></li><li><p>一定量の変更ごにコミット（メッセージ記入必須）<br> Git 未経験者は dev ブランチ直接変更ではなく新規ブランチ作成推奨：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> branch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> checkout</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>これで dev の更新影響を受けずに開発可能</p></li><li><p>開発完了後、変更をリモートリポジトリへプッシュ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> push</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> origin</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA メインリポジトリ</a> で Pull Request を提出（master ではなく dev ブランチを指定）</p></li><li><p>上流リポジトリの更新を同期する場合：</p><ol><li><p>上流リポジトリを追加：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> remote</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> https://github.com/MaaAssistantArknights/MaaAssistantArknights.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>更新を取得：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> fetch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>リベース（推奨）またはマージ：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> rebase</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream/dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>または</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> merge</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>ステップ7、8、9、10 を繰り返し</p></li></ol></li></ol><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>Visual Studio 起動後、Git 操作は「Git 変更」画面からコマンドライン不要で可能</p></div><h2 id="visual-studioでclang-formatを有効にする" tabindex="-1"><a class="header-anchor" href="#visual-studioでclang-formatを有効にする"><span>Visual Studioでclang-formatを有効にする</span></a></h2><ol><li><p>clang-format バージョン20.1.0以上をインストールします。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">python</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -m</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> pip</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clang-format</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>&#39;Everything&#39;などのツールを使用して、clang-format.exeのインストール場所を見つけます。参考までに、Anacondaを使用している場合、clang-format.exeはYourAnacondaPath/Scripts/clang-format.exeにインストールされます。</p></li><li><p>Visual Studioで、 Tools-Optionsで &#39;clang-format&#39;を検索します。</p></li><li><p><code>clang-formatサポートを有効にする</code> をクリックし、下の <code>カスタムのclang-format.exeファイルを使用する</code> を選択し、最初取得した <code>clang-format.exe</code> を選択します。</p></li></ol><p><img src="`+h+'" alt="Visual Studioでclang-formatを有効にする" loading="lazy"></p><p>そうすれば、 Visual Studio は c++20 構文をサポートする clang-format を問題なく使用できます！</p><p><code>tools\\ClangFormatter\\clang-formatter.py</code> を使用して、clang-formatを直接呼び出して書式設定することもできます。プロジェクトのルートディレクトリで</p><ul><li><code>python tools\\ClangFormatter\\clang-formatter.py --clang-format=PATH\\TO\\YOUR\\clang-format.exe --input=src\\MaaCore</code></li></ul><p>を実行するだけです。</p><h2 id="オンライン開発に-github-codespace-を使用する" tabindex="-1"><a class="header-anchor" href="#オンライン開発に-github-codespace-を使用する"><span>オンライン開発に GitHub codespace を使用する</span></a></h2><p>GitHub codespace を作成して C++ 開発環境を自動的に構成する</p><p><a href="https://codespaces.new/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer"><img src="https://github.com/codespaces/badge.svg?color=green" alt="Open in GitHub Codespaces" loading="lazy"></a></p>',13)),t("p",null,[i[3]||(i[3]=s("次に、 vscode または ")),l(e,{to:"/ja-jp/develop/linux-tutorial.html"},{default:n(()=>i[2]||(i[2]=[s("Linuxチュートリアル")])),_:1,__:[2]}),i[4]||(i[4]=s(" のプロンプトに従って、 GCC 12 および CMake プロジェクトを構成します。"))])])}const b=r(k,[["render",g]]),v=JSON.parse('{"path":"/ja-jp/develop/development.html","title":"開発を開始","lang":"ja-jp","frontmatter":{"order":1,"icon":"iconoir:developer","description":"開発を開始 Github Pull Request プロセス概要 プログラミングの仕方がわからないので、JSONファイルやドキュメントなどを少し変更したいのですが、どうすればいいですか？ へようこそ（純WebサイトのPRチュートリアル） プログラミングの仕方を知っていますが、GitHub/C++/...... に触れたことがありません、どうすればいいで...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"開発を開始\\",\\"image\\":[\\"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png\\",\\"https://github.com/codespaces/badge.svg?color=green\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ja-jp/develop/development.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"開発を開始"}],["meta",{"property":"og:description","content":"開発を開始 Github Pull Request プロセス概要 プログラミングの仕方がわからないので、JSONファイルやドキュメントなどを少し変更したいのですが、どうすればいいですか？ へようこそ（純WebサイトのPRチュートリアル） プログラミングの仕方を知っていますが、GitHub/C++/...... に触れたことがありません、どうすればいいで..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png"}],["meta",{"property":"og:locale","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://maa.plus/docs/ko-kr/develop/development.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/develop/development.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":1.61,"words":484},"filePathRelative":"ja-jp/develop/development.md","autoDesc":true}');export{b as comp,v as data};
