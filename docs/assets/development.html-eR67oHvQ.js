import{_ as o}from"./development-enable-vs-clang-format-B4WJrt15.js";import{_ as r,c as d,b as a,a as t,e as i,d as n,w as l,r as h,o as p}from"./app-DbvXOh0a.js";const c={};function g(u,e){const s=h("RouteLink");return p(),d("div",null,[e[8]||(e[8]=a('<h1 id="getting-started-with-development" tabindex="-1"><a class="header-anchor" href="#getting-started-with-development"><span>Getting Started with Development</span></a></h1><h2 id="introduction-to-github-pull-request-flow" tabindex="-1"><a class="header-anchor" href="#introduction-to-github-pull-request-flow"><span>Introduction to GitHub Pull Request flow</span></a></h2><h3 id="i-don-t-know-programming-but-just-want-to-modify-some-json-files-documents-how-can-i-do-it" tabindex="-1"><a class="header-anchor" href="#i-don-t-know-programming-but-just-want-to-modify-some-json-files-documents-how-can-i-do-it"><span>I don&#39;t know programming but just want to modify some JSON files/documents, how can I do it?</span></a></h3>',3)),t("p",null,[e[1]||(e[1]=i("Welcome to the ")),n(s,{to:"/en-us/develop/pr-tutorial.html"},{default:l(()=>e[0]||(e[0]=[i("GitHub Pull Request Tutorial")])),_:1,__:[0]}),e[2]||(e[2]=i(" that anyone can understand (purely web-based on ")),e[3]||(e[3]=t("a",{href:"http://Github.com",target:"_blank",rel:"noopener noreferrer"},"Github.com",-1)),e[4]||(e[4]=i(")"))]),e[9]||(e[9]=a(`<h3 id="i-can-program-but-i-ve-never-used-github-c-how-do-i-get-started" tabindex="-1"><a class="header-anchor" href="#i-can-program-but-i-ve-never-used-github-c-how-do-i-get-started"><span>I can program, but I&#39;ve never used GitHub/C++/..., how do I get started?</span></a></h3><ol><li><p>If you forked the repository long ago, first delete it via your repository&#39;s <code>Settings</code> at the bottom.</p></li><li><p>Visit the <a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA main repository</a>, click <code>Fork</code>, then <code>Create fork</code>.</p></li><li><p>Clone the dev branch of your repository with submodules:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clone</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> --recurse-submodules</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;"> &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">your</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> repository</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> lin</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">k</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">&gt;</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -b</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>If using Git GUI clients like Visual Studio without <code>--recurse-submodules</code> support, run <code>git submodule update --init</code> after cloning to initialize submodules.</p></div></li><li><p>Download prebuilt third-party libraries<br><strong>Python environment required - search for Python installation tutorials if needed</strong><br><em>（<a href="http://maadeps-download.py" target="_blank" rel="noopener noreferrer">maadeps-download.py</a> is located in the project root）</em></p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">python </span><span style="--shiki-light:#001080;--shiki-dark:#D8DEE9;">maadeps</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">download.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Configure development environment</p><ul><li>Download and install <code>Visual Studio 2022 Community</code>, selecting <code>Desktop development with C++</code> and <code>.NET Desktop Development</code> during installation.</li></ul></li><li><p>Double-click <code>MAA.sln</code> to open the project in Visual Studio.</p></li><li><p>Configure Visual Studio settings</p><ul><li>Select <code>RelWithDebInfo</code> and <code>x64</code> in the top configuration bar (Skip for Release builds or ARM platforms)</li><li>Right-click <code>MaaWpfGui</code> -&gt; Properties -&gt; Debug -&gt; Enable native debugging (This enables breakpoints in C++ Core)</li></ul></li><li><p>Now you&#39;re ready to happily <s>mess around</s> start developing!</p></li><li><p>Commit regularly with meaningful messages during development<br> Beginners should create a new branch instead of committing directly to <code>dev</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> branch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> checkout</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>This keeps your changes isolated from upstream <code>dev</code> updates.</p></li><li><p>After development, push your local branch (e.g. <code>dev</code>) to your remote repository:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> push</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> origin</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Submit a Pull Request at the <a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA main repository</a>. Ensure your changes are based on the <code>dev</code> branch, not <code>master</code>.</p></li><li><p>To sync upstream changes:</p><ol><li><p>Add upstream repository:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> remote</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> https://github.com/MaaAssistantArknights/MaaAssistantArknights.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Fetch updates:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> fetch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Rebase or merge:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> rebase</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream/dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>or</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> merge</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Repeat steps 7, 8, 9, 10.</p></li></ol></li></ol><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>After opening Visual Studio, Git operations can be performed using VS&#39;s built-in &quot;Git Changes&quot; instead of command-line tools.</p></div><h2 id="maa-file-formatting-requirements" tabindex="-1"><a class="header-anchor" href="#maa-file-formatting-requirements"><span>MAA file formatting requirements</span></a></h2><p>MAA uses a series of formatting tools to ensure that the code and resource files in the repository are visually unified for easy maintenance and reading.</p><p>Please ensure that it has been formatted before submission, or <a href="#use-pre-commit-hooks-to-automatically-format-code">enable Pre commit Hooks for automatic formatting</a>.</p><p>The currently enabled formatting tools are as follows:</p><table><thead><tr><th>File Type</th><th>Format Tool</th></tr></thead><tbody><tr><td>C++</td><td><a href="https://clang.llvm.org/docs/ClangFormat.html" target="_blank" rel="noopener noreferrer">clang-format</a></td></tr><tr><td>Json/Yaml</td><td><a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a></td></tr><tr><td>Markdown</td><td><a href="https://github.com/DavidAnson/markdownlint-cli2" target="_blank" rel="noopener noreferrer">markdownlint</a></td></tr></tbody></table><h3 id="use-pre-commit-hooks-to-automatically-format-code" tabindex="-1"><a class="header-anchor" href="#use-pre-commit-hooks-to-automatically-format-code"><span>Use Pre-commit Hooks to Automatically Format Code</span></a></h3><ol><li><p>Ensure that you have Python and Node environments on your computer.</p></li><li><p>Execute the following command in the root directory of the project:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">pip</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> pre-commit</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>If pre-commit still cannot be used after pip install, please check if the pip installation path has been added to the PATH.</p><p>The formatting tool will automatically run every time you submit to ensure that your code format conforms to the style guide.</p><h3 id="enable-clang-format-in-visual-studio" tabindex="-1"><a class="header-anchor" href="#enable-clang-format-in-visual-studio"><span>Enable clang-format in Visual Studio</span></a></h3><ol><li><p>Install clang-format version 20.1.0 or higher.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">python</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -m</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> pip</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clang-format</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Use tools like &#39;Everything&#39; to locate the installation location of clang-format.exe. As a reference, if you are using Anaconda, clang-format.exe will be installed in YourAnacondaPath/Scripts/clang-format.exe.</p></li><li><p>In Visual Studio, search for &#39;clang-format&#39; in Tools-Options.</p></li><li><p>Click <code>Enable ClangFormat support</code> and select <code>Use custom clang-format.exe file</code> and choose the <code>clang-format.exe</code> located in Step 2.</p></li></ol><p><img src="`+o+'" alt="Enable clang-format in Visual Studio" loading="lazy"></p><p>You are all set with the clang-format integrated in Visual Studio supporting c++20 features!</p><p>You can also format with <code>tools\\ClangFormatter\\clang-formatter.py</code> directly, by executing in the root folder of the project:</p><ul><li><code>python tools\\ClangFormatter\\clang-formatter.py --clang-format=PATH\\TO\\YOUR\\clang-format.exe --input=src\\MaaCore</code></li></ul><h2 id="develop-in-cloud-using-github-codespace" tabindex="-1"><a class="header-anchor" href="#develop-in-cloud-using-github-codespace"><span>Develop in cloud using GitHub codespace</span></a></h2><p>Create GitHub codespace with pre-configured C++ dev environments:</p><p><a href="https://codespaces.new/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer"><img src="https://github.com/codespaces/badge.svg?color=green" alt="Open in GitHub Codespaces" loading="lazy"></a></p>',21)),t("p",null,[e[6]||(e[6]=i("Then follow the instructions in vscode or ")),n(s,{to:"/en-us/develop/linux-tutorial.html"},{default:l(()=>e[5]||(e[5]=[i("Linux tutorial")])),_:1,__:[5]}),e[7]||(e[7]=i(" to configure GCC 12 and the CMake project."))])])}const b=r(c,[["render",g]]),f=JSON.parse(`{"path":"/en-us/develop/development.html","title":"Getting Started with Development","lang":"en-us","frontmatter":{"order":1,"icon":"iconoir:developer","description":"Getting Started with Development Introduction to GitHub Pull Request flow I don't know programming but just want to modify some JSON files/documents, how can I do it? Welcome to...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Getting Started with Development\\",\\"image\\":[\\"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png\\",\\"https://github.com/codespaces/badge.svg?color=green\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/en-us/develop/development.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"Getting Started with Development"}],["meta",{"property":"og:description","content":"Getting Started with Development Introduction to GitHub Pull Request flow I don't know programming but just want to modify some JSON files/documents, how can I do it? Welcome to..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png"}],["meta",{"property":"og:locale","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://maa.plus/docs/ko-kr/develop/development.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://maa.plus/docs/ja-jp/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/develop/development.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"en-us/develop/development.md","autoDesc":true}`);export{b as comp,f as data};
