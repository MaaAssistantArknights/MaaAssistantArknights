import{_ as h,c as k,a as i,b as t,e as a,d as l,w as n,r as p,o as d}from"./app-DbvXOh0a.js";const r={};function o(c,s){const e=p("RouteLink");return d(),k("div",null,[s[10]||(s[10]=i("h1",{id:"해외-클라이언트-현지화-가이드",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#해외-클라이언트-현지화-가이드"},[i("span",null,"해외 클라이언트 현지화 가이드")])],-1)),s[11]||(s[11]=i("h2",{id:"준비",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#준비"},[i("span",null,"준비")])],-1)),s[12]||(s[12]=i("p",null,"이 튜토리얼을 시작하기 전에 다음 사항이 준비되었는지 확인해야 합니다.",-1)),i("ol",null,[s[6]||(s[6]=i("li",null,[a("필요한 소프트웨어를 설치하고 올바르게 구성했습니다. ZH-CN 클라이언트 또는 해당 클라이언트의 "),i("code",null,"readme.md"),a(" 에 지원되는 기능이 제대로 작동하는지 확인할 수 있는 정보가 있서야 합니다.")],-1)),i("li",null,[l(e,{to:"/ko-kr/protocol/task-schema.html"},{default:n(()=>s[0]||(s[0]=[a("작업 스키마")])),_:1,__:[0]}),s[1]||(s[1]=a(" 를 읽고 각 필드의 의미와 사용법을 기본적으로 이해해야 합니다. 코드에서 ")),s[2]||(s[2]=i("code",null,"@",-1)),s[3]||(s[3]=a(" 와 ")),s[4]||(s[4]=i("code",null,"#",-1)),s[5]||(s[5]=a(" 의 의미와 용법도 이해해야 합니다."))]),s[7]||(s[7]=t("<li>ZH-CN 클라이언트의 <code>task.json</code> 파일과 템플릿 이미지는 해외 클라이언트에 대해 언급되지 않았거나 누락된 경우의 대안으로 사용된다는 점을 이해해야합니다. 해외 클라이언트에 대한 <code>task.json</code> 의 내용은 ZH-CN 작업 필드에 따라 다시 작성해야 합니다.</li><li>영어 실력이 있고, 영어 로그를 읽을 수 있으며, 로그를 통해 누락된 사진과 다른 정보를 찾을 수 있는 역량이 있으면 좋습니다.</li><li>작업 체인에 따라 개별적으로 수정을 수행하는 것이 좋습니다. 예를 들어, Award 작업을 수정하려면 <code>next</code> 필드의 순서에 따라 <code>template image</code>, <code>text</code>, 그리고 <code>roi</code> 를 단계적으로 수정해야 합니다. 이렇게 하면 수정 후 모든 작업이 정상적으로 작동하고 오류를 쉽게 발견할 수 있습니다. 또한 이렇게 하면 한 번에 너무 많은 콘텐츠가 수정될 때 소프트웨어가 어떤 작업에 고정되어 있는지 혼동하거나 잊어버리는 것을 방지할 수 있습니다.</li>",3))]),s[13]||(s[13]=t(`<h3 id="변경-전-준비사항" tabindex="-1"><a class="header-anchor" href="#변경-전-준비사항"><span>변경 전 준비사항</span></a></h3><p>변경하기 전에 다음과 같은 몇 가지 준비 사항에 유의해야 합니다:</p><ol><li>ZH-CN 클라이언트의 <code>task.json</code> 을 참조하여 해외 클라이언트를 위한 템플릿 이미지와 텍스트 콘텐츠를 준비했는지 확인해야 합니다.</li><li>이러한 이미지와 텍스트 콘텐츠에 올바르게 접근할 수 있는지 확인해야 합니다.</li></ol><h2 id="스크린샷-얻기" tabindex="-1"><a class="header-anchor" href="#스크린샷-얻기"><span>스크린샷 얻기</span></a></h2><p>고품질의 스크린샷을 얻으려면 다음 지침을 따르세요:</p><ol><li>에뮬레이터와 함께 제공된 스크린샷 도구를 사용하여 스크린샷을 만들고 저장합니다.</li><li>스크린샷의 크기가 <code>1280*720</code> 이상이고 종횡비는 반드시 <code>16:9</code> 이어야 합니다.</li><li>스크린샷에 작업 표시줄, 상태 표시줄 또는 알림 표시줄과 같은 관련 없는 내용이 포함되어 있지 않은지 확인해야 합니다.</li><li>스크린샷에 인식해야 할 내용이 모두 포함되어 있는지 확인해야합니다.</li></ol><p>이미지를 잘라내고 관심 텍스트/이미지 영역(ROI)을 얻으려면, <code>Python</code> 과 <code>OpenCV</code> 를 설치하고, <code>MaaAssistantArknights/tools/CropRoi/main.py</code> 파일을 다운로드해야 합니다.</p><p>그런 다음, 다음 단계를 수행합니다.</p><ol><li><code>main.py</code>와 같은 디렉토리에 <code>src</code> 와 <code>dst</code> 폴더를 새로 만듭니다.</li><li>크기를 조정해야 하거나 새로운 ROI 값이 필요한 텍스트/이미지의 <strong>전체 스크린샷</strong>을 <code>src</code> 폴더에 넣습니다.</li><li><code>main.py</code>를 실행합니다.</li><li>마우스를 드래그하여 대상 범위를 선택하고, 관련 없는 내용이 포함되지 않도록 합니다.</li><li>범위가 결정되면 <code>S</code>를 눌러 저장하고 <code>Q</code>를 눌러 종료합니다. 잘라낸 이미지가 dst 폴더에 저장됩니다.</li></ol><p>예를 들어, 자르기를 완료한 후의 출력은 다음과 같습니다:</p><div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-log"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">src: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">Screenshot_xxx.png</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">dst: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">Screenshot_xxx.png_426</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">272</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">177</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">201</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">.png</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">original roi: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">476</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">322</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">77</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">101</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">amplified roi: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">426</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">272</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">177</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">201</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이 예시에서, <code>Screenshot_xxx.png</code> 는 <code>src</code> 폴더에 배치된 전체 스크린샷의 이름이고, <code>Screenshot_xxx.png_426,272,177,201.png</code> 는 잘라낸 이미지의 이름입니다.</p><p>원래의 <code>original roi</code> 는 마우스가 선택한 영역이고, <code>amplified roi</code> 는 확대된 영역입니다. 확대된 영역이 필요하므로, <code>amplified roi</code> 값을 사용하여 task.json 의 roi 필드를 입력해야 합니다.</p><h2 id="템플릿-이미지-수정" tabindex="-1"><a class="header-anchor" href="#템플릿-이미지-수정"><span>템플릿 이미지 수정</span></a></h2><p>템플릿 이미지를 수정하기 전에 해당 클라이언트의 템플릿 이미지 폴더와 ZH-CN 클라이언트의 템플릿 이미지 폴더를 열어야 합니다.</p><p>예시:</p><ul><li>KR 클라이언트의 템플릿 이미지 폴더 위치는 <code>MaaAssistantArknights\\resource\\global\\YoStarKR\\resource\\template</code> 입니다.</li><li>ZH-CN 클라이언트의 템플릿 이미지 폴더 위치는 <code>MaaAssistantArknights\\resource\\template</code> 입니다.</li></ul><p><code>task.json</code> 파일에 언급된 템플릿 이미지를 참조하여 ZH-CN 클라이언트와 해외 클라이언트의 템플릿 이미지를 비교하고, 해외 클라이언트에서 누락된 템플릿이 있는지 확인합니다.</p><p>일반적으로 텍스트가 포함된 템플릿 이미지는 로고와 같은 이미지를 제외하고 스크린샷으로 대체해야 합니다. 이미지의 크기가 ZH-CN 클라이언트의 해당 템플릿 이미지보다 상당히 큰 경우 <code>roi</code>의 크기를 수정해야 할 수 있습니다.</p><p>템플릿 이미지를 캡처하고 이름을 변경한 후에는 해당 클라이언트의 템플릿 이미지 폴더에 배치할 수 있습니다.</p><h2 id="텍스트-내용-수정" tabindex="-1"><a class="header-anchor" href="#텍스트-내용-수정"><span>텍스트 내용 수정</span></a></h2><p>텍스트 내용을 수정하기 전에 해당 서버와 ZH-CN 클라이언트 모두에 대해 <code>task.json</code> 파일을 열어야 합니다.</p><p>예시:</p><ul><li>KR 클라이언트에서 <code>task.json</code> 의 위치는 <code>MaaAssistantArknights\\resource\\global\\YoStarKR\\resource\\tasks.json</code> 입니다.</li><li>ZH-CN 클라이언트의 <code>task.json</code> 위치는 <code>MaaAssistantArknights\\resource\\tasks.json</code> 입니다.</li></ul><p>텍스트를 수정하려면 해당 작업을 찾은 후 <code>text</code> 필드를 해당 서버에 표시된 내용으로 변경합니다. 식별된 콘텐츠는 게임 내 전체 콘텐츠의 하위 문자열이 될 수 있습니다. 일반적으로 텍스트가 포함된 <code>text</code> 는 순수 ASCII 문자로 인식되지 않는 한 대체해야 합니다.</p><p>텍스트 길이가 ZH-CN 클라이언트 버전보다 상당히 긴 경우, <code>roi</code> 필드의 크기를 수정해야 할 수 있습니다. 예를 들어 <code>&quot;任务&quot;</code>(임무)와 한글 단어 <code>&quot;임무&quot;</code> 의 길이 차이가 너무 큰 경우, 해외 클라이언트에서 해당 단어의 <code>roi</code> 크기를 수정해야 할 수 있습니다.</p><p>해당 해외 서버의 <code>task.json</code> 파일에 작업이 없으면 추가해야 합니다. <code>text</code> 필드에 적절한 내용을 입력합니다.</p><h2 id="roi-범위-수정" tabindex="-1"><a class="header-anchor" href="#roi-범위-수정"><span>ROI 범위 수정</span></a></h2><p>ROI 범위를 수정하는 방법:</p><ol><li>해당 서버의 <code>task.json</code> 파일을 엽니다. 예를 들어 KR 클라이언트의 <code>task.json</code> 파일 위치는 <code>MaaAssistantArknights\\resource\\global\\YoStarKR\\resource\\tasks.json</code> 입니다.</li><li>수정해야 할 ROI 범위에 해당하는 작업을 찾고 해외 게임 인터페이스의 스크린샷을 사용하여 증폭된 ROI에 따라 <code>roi</code> 범위의 크기를 조정합니다.</li><li>일반적으로, <code>roi</code> 범위를 수정할 필요가 없지만 텍스트와 중국어 클라이언트 버전 간의 크기 차이가 너무 클 경우 수정해야 할 수도 있습니다.</li><li>해당 해외 클라이언트의 <code>task.json</code> 파일에 작업이 없는 경우 작업을 추가하고 적절한 값으로 <code>roi</code> 필드를 작성합니다.</li></ol><h2 id="설정-저장-및-소프트웨어-재시작" tabindex="-1"><a class="header-anchor" href="#설정-저장-및-소프트웨어-재시작"><span>설정 저장 및 소프트웨어 재시작</span></a></h2><p>변경한 후 변경 내용을 적용하려면 설정을 저장하고 소프트웨어를 다시 시작해야 합니다. 이렇게 하려면 소프트웨어를 다시 시작하고 파일을 다시 로드하거나 소프트웨어 디렉터리에 새 <code>DEBUG.txt</code> 파일을 생성합니다. 이렇게 하면 &quot;Link Start!&quot; 단추를 누를 때마다 템플릿과 파일이 다시 로드되므로 소프트웨어를 다시 시작할 필요가 없습니다.</p><p>성공 여부 확인하기:</p><ol><li>소프트웨어의 작동 여부 확인을 통해 해외 서버에서 제대로 작동하는지 확인합니다.</li><li>제대로 작동하지 않는 경우 변경 사항이 올바른지 확인하거나 로그를 보고 무엇이 잘못되었는지 확인해야 합니다.</li></ol><h2 id="로그-분석" tabindex="-1"><a class="header-anchor" href="#로그-분석"><span>로그 분석</span></a></h2><p><code>task.json</code> 파일을 수정했지만 프로그램이 여전히 제대로 작동하지 않는 경우 로그를 확인하여 오류를 찾고 그에 따라 해당 작업을 수정하는 것이 도움이 될 수 있습니다. 로그 파일은 일반적으로 소프트웨어의 루트 디렉터리에 있으며 이름은 <code>asst.log</code> 입니다. MAA를 직접 컴파일한 경우, 컴파일할 때 선택한 컴파일 모드에 따라 <code>\\x64\\Release</code> 또는 <code>\\x64\\RelWithDebInfo</code> 디렉터리에 있을 수 있습니다.</p><p>로그를 분석하면 프로그램의 문제를 식별하는 데 도움이 될 수 있습니다. 다음은 로그 예제입니다:</p><div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-log"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:17.535</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">]</span><span style="--shiki-light:#098658;--shiki-dark:#A3BE8C;">[INF]</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[Px7ec][Tx15c8] {</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;taskchain&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;details&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:{</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;to_be_recognized&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:[</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award@ReturnTo&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;ReceiveAward&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;DailyTask&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;WeeklyTask&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award@CloseAnno&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award@CloseAnnoTexas&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award@TodaysSupplies&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;Award@FromStageSN&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">],</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;cur_retry&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">10</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;retry_times&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">20</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">},</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;first&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:[</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;AwardBegin&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">],</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;taskid&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">2</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;class&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;asst::ProcessTask&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;subtask&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;ProcessTask&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;pre_task&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;AwardBegin&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.398</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">]</span><span style="--shiki-light:#098658;--shiki-dark:#A3BE8C;">[INF]</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[Px7ec][Tx15c8] Call \` C:\\Program Files\\BlueStacks_nxt\\. \\HD-</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">Adb.exe</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> -s </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">127</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">.</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">.</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">.</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">1</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">5555</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> exec-out </span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">&quot;screencap | gzip -1&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> \` ret </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> , cost </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">862</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> ms , stdout size: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">2074904</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> , socket size: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.541</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] OcrPack::recognize | roi: [ </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">500</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">50</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">300</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">150</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.541</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] Ocr Pipeline with asst::WordOcr | enter</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.634</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] Ocr Pipeline with asst::WordOcr | leave, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">93</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> ms</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.634</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] OcrPack::recognize | raw: [{ : [ </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">300</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">150</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> ], score: </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">0</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">.</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">000000</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> }]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.634</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] OcrPack::recognize | proc: []</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.637</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] asst::ProcessTask::_run | leave, </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">1101</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> ms</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:18.638</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] ready to sleep </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">500</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:19.144</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] end of sleep </span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">500</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">[</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">2022-12-18</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> 17:43:19.144</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">][TRC][Px7ec][Tx15c8] asst::ProcessTask::_run | enter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이 로그에서 다음 사실을 확인할 수 있습니다:</p><ul><li><code>taskchain</code> 는 현재 진행 중인 작업을 나타냅니다.</li><li><code>details</code> 는 인식할 필드(<code>to_be_recognized</code>)와 현재 재시도 횟수 (<code>cur_retry</code>), 그리고 총 재시도 횟수(<code>retry_times</code>)를 나타냅니다.</li><li><code>first</code> 는 작업의 시작을 나타냅니다.</li><li><code>taskid</code> 는 작업에 부여된 ID 번호입니다.</li><li><code>class</code> 와 <code>subtask</code> 는 각각 작업의 클래스와 하위 작업을 나타냅니다.</li><li><code>pre_task</code> 는 이전 작업을 나타냅니다.<br> 또한, 명령의 실행 (예: <code>Call</code>) 과 <code>OCR</code> 정보 (예: <code>OcrPack::recognize</code>) 가 로그에 기록됩니다.</li></ul><p>예를 들어, 이 로그에서, <code>&quot;to_be_recognized&quot;</code>,<code>&quot;cur_retry&quot;:3,&quot;retry_times&quot;:20</code> 은 작업이 10번 인식 시도되었음을 의미하며, 최대 횟수는 20회입니다. 최대 횟수에 도달하면 작업을 건너뛰고 오류가 보고되고 다음 작업이 수행됩니다. 이전 작업에 문제가 없으면 여기 인식에 문제가 있을 가능성이 높습니다. 이 문제를 해결하려면 로그에 언급된 작업에 해당하는 <code>템플릿</code> 파일이 있는지, 해당 작업의 <code>text</code> 필드가 잘못되었는지, 작업 인식을 위한 <code>roi</code> 범위가 잘못되었는지 확인하고 필요한 수정을 수행할 수 있습니다.</p><p>해당 템플릿 이미지를 보면, EN 클라이언트 템플릿 폴더에 이 이미지에 대한 템플릿이 있지만 크기가 ZH-CN 클라이언트의 템플릿 폴더에 있는 이미지보다 클 수 있습니다. 이로 인해 ZH-CN 클라이언트의 <code>roi</code> 가 EN 클라이언트에서 인식되지 않을 수 있으므로 EN 클라이언트의 <code>task.json</code> 파일에서 해당 작업의 <code>roi</code> 를 EN 클라이언트의 이미지 크기와 일치하도록 수정해야 할 수 있습니다.</p><h2 id="변경사항-제출" tabindex="-1"><a class="header-anchor" href="#변경사항-제출"><span>변경사항 제출</span></a></h2>`,43)),i("p",null,[l(e,{to:"/ko-kr/develop/development.html#github-pull-request-%EC%A7%84%ED%96%89-%EA%B3%BC%EC%A0%95"},{default:n(()=>s[8]||(s[8]=[a("Github Pull Requst 가이드")])),_:1,__:[8]}),s[9]||(s[9]=a("을 참고하세요!"))])])}const g=h(r,[["render",o]]),E=JSON.parse('{"path":"/ko-kr/develop/overseas-client-adaptation.html","title":"해외 클라이언트 현지화 가이드","lang":"ko-kr","frontmatter":{"order":5,"icon":"ri:earth-fill","description":"해외 클라이언트 현지화 가이드 준비 이 튜토리얼을 시작하기 전에 다음 사항이 준비되었는지 확인해야 합니다. 필요한 소프트웨어를 설치하고 올바르게 구성했습니다. ZH-CN 클라이언트 또는 해당 클라이언트의 readme.md 에 지원되는 기능이 제대로 작동하는지 확인할 수 있는 정보가 있서야 합니다. 를 읽고 각 필드의...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"해외 클라이언트 현지화 가이드\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ko-kr/develop/overseas-client-adaptation.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"해외 클라이언트 현지화 가이드"}],["meta",{"property":"og:description","content":"해외 클라이언트 현지화 가이드 준비 이 튜토리얼을 시작하기 전에 다음 사항이 준비되었는지 확인해야 합니다. 필요한 소프트웨어를 설치하고 올바르게 구성했습니다. ZH-CN 클라이언트 또는 해당 클라이언트의 readme.md 에 지원되는 기능이 제대로 작동하는지 확인할 수 있는 정보가 있서야 합니다. 를 읽고 각 필드의..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://maa.plus/docs/ja-jp/develop/overseas-client-adaptation.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/develop/overseas-client-adaptation.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/develop/overseas-client-adaptation.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/develop/overseas-client-adaptation.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":1.66,"words":498},"filePathRelative":"ko-kr/develop/overseas-client-adaptation.md","autoDesc":true}');export{g as comp,E as data};
