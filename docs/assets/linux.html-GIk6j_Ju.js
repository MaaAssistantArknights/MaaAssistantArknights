import{_ as d,c as r,b as s,a as e,e as a,d as n,w as l,r as o,o as h}from"./app-DbvXOh0a.js";const p={},k={class:"hint-container tip"};function c(u,i){const t=o("RouteLink");return h(),r("div",null,[i[12]||(i[12]=s('<h1 id="linux-でのエミューレータ" tabindex="-1"><a class="header-anchor" href="#linux-でのエミューレータ"><span>Linux でのエミューレータ</span></a></h1><h2 id="準備作業" tabindex="-1"><a class="header-anchor" href="#準備作業"><span>準備作業</span></a></h2><h3 id="_1-maa-をインストールする" tabindex="-1"><a class="header-anchor" href="#_1-maa-をインストールする"><span>1. MAA をインストールする</span></a></h3><ol><li><p>Linux ダイナミック ライブラリを <a href="https://maa.plus/" target="_blank" rel="noopener noreferrer">MAA ウェブサイト</a> からダウンロードし、解凍します</p></li><li><p><code>./MAA-v{バージョン}-linux-{アアーキテクチャ}/Python/</code> ディレクトリに移動します、 <code>sample.py</code> ファイルを開け</p></li></ol>',4)),e("div",k,[i[4]||(i[4]=e("p",{class:"hint-container-title"},"ヒント",-1)),e("p",null,[i[1]||(i[1]=a("プリコンパイル済みバージョンには、比較的新しいLinuxディストリビューション(Ubuntu 22.04)でコンパイルされた動的ライブラリが含まれており、システムに古いバージョンのlibstdc++がある場合、ABIの非互換性に遭遇する可能性があります")),i[2]||(i[2]=e("br",null,null,-1)),n(t,{to:"/ja-jp/develop/linux-tutorial.html"},{default:l(()=>i[0]||(i[0]=[a("Linuxコンパイル・チュートリアル")])),_:1,__:[0]}),i[3]||(i[3]=a(" を参照して再コンパイルまたはコンテナを使用して実行できます"))])]),i[13]||(i[13]=s(`<ul><li>Arch Linuxシリーズのリリース版は、aur パッケージ <a href="https://aur.archlinux.org/packages/maa-assistant-arknights" target="_blank" rel="noopener noreferrer">maa-assistant-arknights</a>を選択する使用し、インストール後のプロンプトに従ってファイルを編集することができる</li></ul><h3 id="_2-adb-構成" tabindex="-1"><a class="header-anchor" href="#_2-adb-構成"><span>2. <code>adb</code> 構成</span></a></h3><ol><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L48" target="_blank" rel="noopener noreferrer"><code>if asst.connect(&#39;adb.exe&#39;, &#39;127.0.0.1:5554&#39;):</code></a> セクションを見つける</p></li><li><p><code>adb</code> ツール呼び出し</p><ul><li>エミュレータが <code>Android Studio</code> に <code>avd</code> を使用している場合は、 <code>adb</code> が付属します。 <code>adb.exe</code> の欄に直接 <code>adb</code> パスを記入することができ、一般的には <code>$HOME/Android/Sdk/platform-tools/</code> で見つけることができます。例：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">if</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> asst</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">connect</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">/home/foo/Android/Sdk/platform-tools/adb</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">エミュレータの adb アドレス</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>他のエミュレータを使用する場合は、最初に <code>adb</code> をダウンロードして： <code>$ sudo apt install adb</code> 次に、パスを入力するか、 <code>PATH</code> 環境変数を使用して <code>adb</code> を直接入力します</li></ul></li><li><p>エミュレータの <code>adb</code> パス取得</p><ul><li>adb ツールを直接使用できます： <code>$ adbパス devices</code> ，例：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">$</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> /home/foo/Android/Sdk/platform-tools/adb</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> devices</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">List</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> of</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> devices</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> attached</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">emulator-5554</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> device</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>返される <code>emulator-5554</code> はエミュレータのadbアドレスで、 <code>127.0.0.1:5555</code> を上書きします、例：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">if</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> asst</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">connect</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">/home/foo/Android/Sdk/platform-tools/adb</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">emulator-5554</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>この時点で、 <code>$ python3 sample.py</code> をテストでき、 <code>接続成功</code> が返されれば、基本的に成功です</p></li></ol><h3 id="_3-タスク構成" tabindex="-1"><a class="header-anchor" href="#_3-タスク構成"><span>3. タスク構成</span></a></h3>`,4)),e("p",null,[i[6]||(i[6]=a("カストムタスク： 必要に応じて ")),n(t,{to:"/ja-jp/protocol/integration.html"},{default:l(()=>i[5]||(i[5]=[a("統合ドキュメント")])),_:1,__:[5]}),i[7]||(i[7]=a(" を参照し、 ")),i[8]||(i[8]=e("code",null,"sample.py",-1)),i[9]||(i[9]=a(" の ")),i[10]||(i[10]=e("a",{href:"https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L54",target:"_blank",rel:"noopener noreferrer"},[e("code",null,"# タスクとパラメーターについては 統合ドキュメント")],-1)),i[11]||(i[11]=a(" 欄を変更する"))]),i[14]||(i[14]=s('<h2 id="エミュレータのサポート" tabindex="-1"><a class="header-anchor" href="#エミュレータのサポート"><span>エミュレータのサポート</span></a></h2><h3 id="✅-avd" tabindex="-1"><a class="header-anchor" href="#✅-avd"><span>✅ <a href="https://developer.android.com/studio/run/managing-avds" target="_blank" rel="noopener noreferrer">AVD</a></span></a></h3><p>必須構成： 16:9 の画面解像度で、解像度は 720p より大きい必要がある</p><p>推奨構成： x86_64 のフレームワーク (R - 30 - x86_64 - Android 11.0) と MAA のLinux x64 ダイナミック ライブラリ</p><ul><li>Android 10 以降、SELinux が <code>Enforcing</code> モードの場合、Minitouch は使用できません、別のタッチモードに切り替えてください。または SELinux を <strong>一時的に</strong> <code>Permissive</code> モードに切り替え。</li></ul><h3 id="⚠️-genymotion" tabindex="-1"><a class="header-anchor" href="#⚠️-genymotion"><span>⚠️ <a href="https://www.genymotion.com/" target="_blank" rel="noopener noreferrer">Genymotion</a></span></a></h3><p>高バージョンの Android は x86_64 フレームワークを搭載しており、軽量ですがアークナイツを実行するとフラッシュバックしやすい</p><p>厳格なテストは行われておらず、 adb 機能とパス取得に問題はありません</p><h2 id="コンテナー化された-android-のサポート" tabindex="-1"><a class="header-anchor" href="#コンテナー化された-android-のサポート"><span>コンテナー化された Android のサポート</span></a></h2><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>以下のソリューションには通常、カーネルモジュールに関する特定の要件がありますので、特定のスキームとディストリビューションに従って適切なカーネルモジュールをインストールしてください</p></div><h3 id="✅-waydroid" tabindex="-1"><a class="header-anchor" href="#✅-waydroid"><span>✅ <a href="https://waydro.id/" target="_blank" rel="noopener noreferrer">Waydroid</a></span></a></h3><p>インストール後に解像度（または 720P より大きく 16:9 の解像度）をリセットしてから、再起動する必要があります：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">waydroid</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> prop</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> set</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> persist.waydroid.width</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 1280</span></span>\n<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">waydroid</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> prop</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> set</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> persist.waydroid.height</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 720</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>adb の IP アドレスを設定する： <code>設定</code> - <code>バージョン情報</code> - <code>IPアドレス</code> を開き、最初の <code>IP</code> を記録するし、<code>sample.py</code> の adb IP に <code>${記録したIP}:5555</code> を入力する。</p><p>amdgpu を使用すると、<code>screencap</code> コマンドが stderr に情報を出力し、画像のデコードに失敗することがあります。<br><code>adb exec-out screencap | xxd | head</code> と入力し、出力に <code>/vendor/etc/hwdata/amdgpu.ids: No such file...</code> のようなテキストがあるかどうかを確認して、これを確認します。<br><code>resource/config.json</code> のスクリーンショットコマンドを <code>adb exec-out screencap</code> から <code>adb exec-out &#39;screencap 2&gt;/dev/null&#39;</code> に変更してみてください。</p><h3 id="✅-redroid" tabindex="-1"><a class="header-anchor" href="#✅-redroid"><span>✅ <a href="https://github.com/remote-android/redroid-doc" target="_blank" rel="noopener noreferrer">redroid</a></span></a></h3><p>Android 11 バージョンのイメージは正常に動作し、5555 adb ポートを公開する必要があります。</p>',17))])}const m=d(p,[["render",c]]),y=JSON.parse('{"path":"/ja-jp/manual/device/linux.html","title":"Linux でのエミューレータ","lang":"ja-jp","frontmatter":{"order":3,"icon":"teenyicons:linux-alt-solid","description":"Linux でのエミューレータ 準備作業 1. MAA をインストールする Linux ダイナミック ライブラリを MAA ウェブサイト からダウンロードし、解凍します ./MAA-v{バージョン}-linux-{アアーキテクチャ}/Python/ ディレクトリに移動します、 sample.py ファイルを開け ヒント プリコンパイル済みバージョンには...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux でのエミューレータ\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ja-jp/manual/device/linux.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"Linux でのエミューレータ"}],["meta",{"property":"og:description","content":"Linux でのエミューレータ 準備作業 1. MAA をインストールする Linux ダイナミック ライブラリを MAA ウェブサイト からダウンロードし、解凍します ./MAA-v{バージョン}-linux-{アアーキテクチャ}/Python/ ディレクトリに移動します、 sample.py ファイルを開け ヒント プリコンパイル済みバージョンには..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://maa.plus/docs/ko-kr/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/manual/device/linux.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":1.48,"words":444},"filePathRelative":"ja-jp/manual/device/linux.md","autoDesc":true}');export{m as comp,y as data};
