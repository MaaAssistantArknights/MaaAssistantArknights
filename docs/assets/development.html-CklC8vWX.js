import{_ as r}from"./development-enable-vs-clang-format-B4WJrt15.js";import{_ as h,c as d,b as t,a as e,d as l,e as s,w as n,r as p,o}from"./app-DbvXOh0a.js";const k={};function g(c,i){const a=p("RouteLink");return o(),d("div",null,[i[7]||(i[7]=t('<h1 id="개발-환경-구축" tabindex="-1"><a class="header-anchor" href="#개발-환경-구축"><span>개발 환경 구축</span></a></h1><h2 id="github-pull-request-진행-과정" tabindex="-1"><a class="header-anchor" href="#github-pull-request-진행-과정"><span>Github Pull Request 진행 과정</span></a></h2><h3 id="프로그래밍을-잘-모르지만-json-파일과-docs-문서를-수정하고싶어요-어떻게-해야하나요" tabindex="-1"><a class="header-anchor" href="#프로그래밍을-잘-모르지만-json-파일과-docs-문서를-수정하고싶어요-어떻게-해야하나요"><span>프로그래밍을 잘 모르지만, json 파일과 docs 문서를 수정하고싶어요. 어떻게 해야하나요?</span></a></h3>',3)),e("p",null,[l(a,{to:"/ko-kr/develop/pr-tutorial.html"},{default:n(()=>i[0]||(i[0]=[s("웹 기반 PR 가이드")])),_:1,__:[0]}),i[1]||(i[1]=s("를 참고하세요! (")),i[2]||(i[2]=e("a",{href:"http://GitHub.com",target:"_blank",rel:"noopener noreferrer"},"GitHub.com",-1)),i[3]||(i[3]=s(" 웹사이트에서만 가능합니다)"))]),i[8]||(i[8]=t(`<h3 id="프로그래밍을-할-줄-알지만-github-c-에-익숙하지-않아요-어떻게-해야-하나요" tabindex="-1"><a class="header-anchor" href="#프로그래밍을-할-줄-알지만-github-c-에-익숙하지-않아요-어떻게-해야-하나요"><span>프로그래밍을 할 줄 알지만 GitHub/C++/...에 익숙하지 않아요. 어떻게 해야 하나요?</span></a></h3><ol><li><p>이전에 fork 한 기록이 있다면 저장소 Settings 맨 아래에서 삭제</p></li><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA 메인 저장소</a>에서 Fork → Create fork 클릭</p></li><li><p>본인 저장소의 dev 브랜치를 서브모듈 포함 클론:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clone</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> --recurse-submodules</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;"> &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">저장소</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> 링</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">크</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">&gt;</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -b</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">경고</p><p>Visual Studio 등 --recurse-submodules 미지원 Git GUI 사용 시, 클론 후 다음 실행:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> submodule</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> update</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> --init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div></li><li><p>사전 빌드된 외부 라이브러리 다운로드</p><p><strong>Python 환경 필요 (별도 설치 필요)</strong><br><em>（<a href="http://maadeps-download.py" target="_blank" rel="noopener noreferrer">maadeps-download.py</a> 파일은 프로젝트 루트에 위치）</em></p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">python </span><span style="--shiki-light:#001080;--shiki-dark:#D8DEE9;">maadeps</span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">-</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">download.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>개발 환경 구성</p><ul><li>Visual Studio 2022 Community 설치 시 <code>C++ 데스크톱 개발</code> 및 <code>.NET 데스크톱 개발</code> 필수 선택</li></ul></li><li><p>MAA.sln 파일 더블클릭 → Visual Studio에서 프로젝트 자동 로드</p></li><li><p>VS 설정</p><ul><li>상단 구성에서 RelWithDebInfo x64 선택 (릴리스 빌드/ARM 플랫폼 시 생략)</li><li>MaaWpfGui 우클릭 → 속성 → 디버그 → 네이티브 디버깅 활성화 (C++ 코어 중단점 사용 가능)</li></ul></li><li><p>이제 자유롭게 <s>개조</s> 개발 시작!</p></li><li><p>주기적 커밋 (메시지 필수 작성)<br> Git 초보자는 dev 브랜치 대신 새 브랜치 생성 권장:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> branch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> checkout</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> your_own_branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>dev 브랜치 업데이트 영향에서 자유로움</p></li><li><p>개발 완료 후 변경사항 원격 저장소로 푸시:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> push</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> origin</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer">MAA 메인 저장소</a>에서 Pull Request 제출 (master 대신 dev 브랜치 지정 필수)</p></li><li><p>업스트림 저장소 변경사항 동기화 방법:</p><ol><li><p>업스트림 저장소 추가:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> remote</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> https://github.com/MaaAssistantArknights/MaaAssistantArknights.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>변경사항 가져오기:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> fetch</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>리베이스(권장) 또는 병합:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> rebase</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> upstream/dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>또는</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> merge</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>단계 7, 8, 9, 10 반복 수행</p></li></ol></li></ol><div class="hint-container tip"><p class="hint-container-title">팁</p><p>Visual Studio 실행 시 Git 작업은 &quot;Git 변경&quot; 탭에서 명령어 없이 처리 가능</p></div><h2 id="maa-파일의-포매팅-요구-사항" tabindex="-1"><a class="header-anchor" href="#maa-파일의-포매팅-요구-사항"><span>MAA 파일의 포매팅 요구 사항</span></a></h2><p>MAA는 리포지토리의 코드 및 리소스 파일들을 아름답고 일관적으로 유지하기 위해 일련의 포매팅 도구를 사용합니다.</p><p>제출하기 전에 포맷을 지정했거나 <a href="#pre-commit-hooks%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%9E%90%EB%8F%99-%ED%8F%AC%EB%A7%A4%ED%8C%85%EC%9D%84-%ED%99%9C%EC%84%B1%ED%99%94">Pre-commit Hooks를 사용하여 자동 포매팅을 활성화</a>를 했는지 확인하세요.</p><p>현재 활성화된 포매팅 도구는 다음과 같습니다:</p><table><thead><tr><th>파일 유형</th><th>포매팅 도구</th></tr></thead><tbody><tr><td>C++</td><td><a href="https://clang.llvm.org/docs/ClangFormat.html" target="_blank" rel="noopener noreferrer">clang-format</a></td></tr><tr><td>Json/Yaml</td><td><a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a></td></tr><tr><td>Markdown</td><td><a href="https://github.com/DavidAnson/markdownlint-cli2" target="_blank" rel="noopener noreferrer">markdownlint</a></td></tr></tbody></table><h3 id="pre-commit-hooks를-사용하여-자동-포매팅을-활성화" tabindex="-1"><a class="header-anchor" href="#pre-commit-hooks를-사용하여-자동-포매팅을-활성화"><span>Pre-commit Hooks를 사용하여 자동 포매팅을 활성화</span></a></h3><ol><li><p>Python 및 Node 환경이 컴퓨터에 설치되어 있는지 확인하세요.</p></li><li><p>프로젝트 루트 디렉터리에서 다음 명령을 실행하세요.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">pip</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> pre-commit</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>이제, 매번 커밋할 때마다 포매팅 도구가 자동으로 실행되어 코드 형식이 규칙에 맞는지 확인합니다.</p><h2 id="visual-studio에서-clang-format-사용-설정" tabindex="-1"><a class="header-anchor" href="#visual-studio에서-clang-format-사용-설정"><span>Visual Studio에서 clang-format 사용 설정</span></a></h2><ol><li><p>clang-format 20.1.0 또는 그 이상 버전을 설치합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">python</span><span style="--shiki-light:#0000FF;--shiki-dark:#A3BE8C;"> -m</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> pip</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> clang-format</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Everything 등의 도구를 사용하여 clang-format.exe의 설치 위치를 찾습니다. 참고로 Anaconda를 사용하는 경우 clang-format.exe는 YourAnacondaPath/Scripts/clang-format.exe에 설치됩니다.</p></li><li><p>Visual Studio에서 <code>도구</code>-<code>옵션</code>을 검색하여 <code>clang-format</code>을 클릭합니다.</p></li><li><p><code>ClangFormat 지원 활성화</code>를 클릭하고 아래의 <code>사용자 정의 clang-format.exe 파일 사용</code>을 선택한 다음 2단계에서 찾은 <code>clang-format.exe</code>를 선택합니다.</p></li></ol><p><img src="`+r+'" alt="Visual Studio에서 clang-format 사용 설정" loading="lazy"></p><p>이제 Visual Studio에서 C++20 구문을 지원하는 clang-format을 사용할 수 있습니다!</p><p>또한 프로젝트 루트에서 <code>tools\\ClangFormatter\\clang-formatter.py</code>를 실행하여 직접 clang-format을 호출하여 포맷팅할 수도 있습니다.</p><ul><li><code>python tools\\ClangFormatter\\clang-formatter.py --clang-format=PATH\\TO\\YOUR\\clang-format.exe --input=src\\MaaCore</code></li></ul><h2 id="github-codespace를-사용하여-온라인으로-개발하기" tabindex="-1"><a class="header-anchor" href="#github-codespace를-사용하여-온라인으로-개발하기"><span>GitHub codespace를 사용하여 온라인으로 개발하기</span></a></h2><p>GitHub codespace를 사용하여 자동으로 C++ 개발 환경을 구성하세요.</p><p><a href="https://codespaces.new/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noopener noreferrer"><img src="https://github.com/codespaces/badge.svg?color=green" alt="Open in GitHub Codespaces" loading="lazy"></a></p>',20)),e("p",null,[i[5]||(i[5]=s("그런 다음 vscode의 지침을 따르거나 ")),l(a,{to:"/ko-kr/develop/linux-tutorial.html"},{default:n(()=>i[4]||(i[4]=[s("Linux 컴파일 가이드")])),_:1,__:[4]}),i[6]||(i[6]=s("를 참고하여 GCC 12 및 CMake 프로젝트를 설정하세요."))])])}const b=h(k,[["render",g]]),v=JSON.parse('{"path":"/ko-kr/develop/development.html","title":"개발 환경 구축","lang":"ko-kr","frontmatter":{"order":1,"icon":"iconoir:developer","description":"개발 환경 구축 Github Pull Request 진행 과정 프로그래밍을 잘 모르지만, json 파일과 docs 문서를 수정하고싶어요. 어떻게 해야하나요? 를 참고하세요! (GitHub.com 웹사이트에서만 가능합니다) 프로그래밍을 할 줄 알지만 GitHub/C++/...에 익숙하지 않아요. 어떻게 해야 하나요? ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"개발 환경 구축\\",\\"image\\":[\\"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png\\",\\"https://github.com/codespaces/badge.svg?color=green\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ko-kr/develop/development.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"개발 환경 구축"}],["meta",{"property":"og:description","content":"개발 환경 구축 Github Pull Request 진행 과정 프로그래밍을 잘 모르지만, json 파일과 docs 문서를 수정하고싶어요. 어떻게 해야하나요? 를 참고하세요! (GitHub.com 웹사이트에서만 가능합니다) 프로그래밍을 할 줄 알지만 GitHub/C++/...에 익숙하지 않아요. 어떻게 해야 하나요? ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://maa.plus/docs/images/zh-cn/development-enable-vs-clang-format.png"}],["meta",{"property":"og:locale","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://maa.plus/docs/ja-jp/develop/development.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/develop/development.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/develop/development.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":0.94,"words":281},"filePathRelative":"ko-kr/develop/development.md","autoDesc":true}');export{b as comp,v as data};
