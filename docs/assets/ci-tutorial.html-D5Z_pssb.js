import{_ as a,c as o,b as t,o as r}from"./app-DuVHH-uS.js";const i={};function l(c,e){return r(),o("div",null,e[0]||(e[0]=[t('<h1 id="ci-시스템-해석" tabindex="-1"><a class="header-anchor" href="#ci-시스템-해석"><span>CI 시스템 해석</span></a></h1><p>MAA는 Github Action을 활용하여 웹사이트 구축, 자동 리소스 업데이트, 최종 파일 빌드 및 릴리즈 등 대량의 자동화 작업을 완성했습니다. 시간이 지나면서 이러한 CI들은 점차 중첩되기 시작했고, 일부는 다른 저장소로 연결되기도 했습니다. 본 문서는 MAA의 CI 시스템을 개선하고자 하는 분들에게 간단한 소개를 제공하는 것을 목표로 합니다.</p><p>본 문서를 읽기 전에 MAA의 프로젝트 구조와 구성에 대한 기본적인 개념을 갖고 있는 것이 좋습니다.</p><div class="hint-container tip"><p class="hint-container-title">팁</p><p>이 페이지에서 CI 파일명을 검색하여 원하는 부분으로 빠르게 이동할 수 있습니다.</p></div><p>워크플로우 파일들은 모두 <code>.github/workflows</code> 하위에 저장되어 있으며, 각 파일은 기능에 따라 다음과 같은 부분으로 나눌 수 있습니다:</p><ul><li><a href="#%EC%BD%94%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8">코드 테스트</a></li><li><a href="#%EC%BD%94%EB%93%9C-%EB%B9%8C%EB%93%9C">코드 빌드</a></li><li><a href="#%EB%B2%84%EC%A0%84-%EB%A6%B4%EB%A6%AC%EC%A6%88">버전 릴리즈</a></li><li><a href="#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8">리소스 업데이트</a></li><li><a href="#%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EA%B5%AC%EC%B6%95">웹사이트 구축</a></li><li><a href="#issues-%EA%B4%80%EB%A6%AC">Issues 관리</a></li><li><a href="#pull-requests-%EA%B4%80%EB%A6%AC">Pull Requests 관리</a></li><li><a href="#mirrorchyan-%EA%B4%80%EB%A0%A8">MirrorChyan 관련</a></li><li><a href="#%EA%B8%B0%ED%83%80">기타</a></li></ul><p>또한 <a href="https://pre-commit.ci/" target="_blank" rel="noopener noreferrer">pre-commit.ci</a>를 통해 코드의 자동 포맷팅과 이미지 리소스의 자동 최적화를 구현했으며, PR 생성 후 자동으로 실행되므로 특별히 신경 쓸 필요가 없습니다.</p><h2 id="코드-테스트" tabindex="-1"><a class="header-anchor" href="#코드-테스트"><span>코드 테스트</span></a></h2><p><code>smoke-testing.yml</code></p><p>이 워크플로우는 주로 MaaCore에 대한 기본적인 검사를 담당하며, 리소스 파일 로딩, 일부 간단한 task 실행 테스트 등을 포함합니다.</p><p>테스트 케이스가 오랫동안 업데이트되지 않아서, 현재 이 워크플로우는 기본적으로 리소스 파일에 오류가 없는지, 그리고 MaaCore의 코드에 치명적인 오류(빌드에 영향을 주는 종류)가 없는지 확인하는 역할을 합니다.</p><h2 id="코드-빌드" tabindex="-1"><a class="header-anchor" href="#코드-빌드"><span>코드 빌드</span></a></h2><p><code>ci.yml</code></p><p>이 워크플로우는 코드의 전체 빌드 작업을 담당하며, MAA의 모든 구성 요소를 포함합니다. 빌드 결과물은 실행 가능한 MAA입니다.</p><p>필수적인 MaaCore 외에, Windows 빌드 결과물에는 MaaWpfGui가, MacOS 빌드 결과물에는 MaaMacGui가, Linux 빌드 결과물에는 MaaCLI가 포함됩니다.</p><p>이 워크플로우는 새로운 Commit이나 PR이 발생할 때마다 자동으로 실행되며, 릴리즈 PR에 의해 트리거될 때는 이번 빌드 결과물이 직접 릴리즈에 사용되고 Release가 생성됩니다.</p><h2 id="버전-릴리즈" tabindex="-1"><a class="header-anchor" href="#버전-릴리즈"><span>버전 릴리즈</span></a></h2><p>버전 릴리즈, 줄여서 릴리즈는 사용자에게 업데이트를 배포하는 필수 작업으로, 다음 워크플로우들로 구성됩니다:</p><ul><li><code>release-nightly-ota.yml</code> 개발 버전 릴리즈</li><li><code>release-ota.yml</code> 정식 버전/공개 베타 버전 릴리즈 <ul><li><code>gen-changelog.yml</code> 정식 버전/공개 베타 버전용 changelog 생성</li><li><code>pr-auto-tag.yml</code> 정식 버전/공개 베타 버전용 tag 생성</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">팁</p><p>위 파일명의 ota는 Over-the-Air를 의미하며, 우리가 흔히 말하는 &quot;증분 업데이트 패키지&quot;입니다. 따라서 MAA의 릴리즈 과정에는 실제로 이전 버전들에 대한 OTA 패키지 빌드 단계가 포함됩니다.</p></div><h3 id="개발-버전" tabindex="-1"><a class="header-anchor" href="#개발-버전"><span>개발 버전</span></a></h3><p><code>release-nightly-ota.yml</code></p><p>이 워크플로우는 매일 UTC 시간 22시에 자동으로 실행되어 개발 버전의 릴리즈 주기를 보장합니다. 물론 변경사항을 검증해야 할 때 수동으로 릴리즈할 수도 있습니다.</p><p>주의할 점은 개발 버전의 릴리즈는 Windows 사용자만을 대상으로 하며, MacOS와 Linux 사용자는 개발 업데이트를 받을 수 없습니다.</p><h3 id="정식-버전-공개-베타-버전" tabindex="-1"><a class="header-anchor" href="#정식-버전-공개-베타-버전"><span>정식 버전/공개 베타 버전</span></a></h3><p>이 두 채널의 릴리즈 과정은 상대적으로 복잡합니다. 릴리즈 단계를 시뮬레이션하여 각 워크플로우의 역할을 설명하겠습니다:</p><ol><li><code>dev</code>에서 <code>master</code> 브랜치로의 PR을 생성하며, 해당 PR의 이름은 <code>Release v******</code> 형식이어야 합니다</li><li><code>gen-changelog.yml</code>이 최근 정식 버전/공개 베타 버전부터 현재 버전까지의 changelog를 생성합니다(새로운 PR 형태로)</li><li>changelog를 수동으로 조정하고 간단한 설명을 추가합니다</li><li>PR을 병합하면 <code>pr-auto-tag.yml</code>이 트리거되어 tag를 생성하고 브랜치를 동기화합니다</li><li>Release 이벤트가 <code>release-ota.yml</code>을 트리거하여 master에 tag를 생성한 후 ota 패키지 빌드 및 첨부파일 업로드를 진행합니다</li></ol><h2 id="리소스-업데이트" tabindex="-1"><a class="header-anchor" href="#리소스-업데이트"><span>리소스 업데이트</span></a></h2><p>이 부분의 워크플로우는 주로 MAA의 리소스 업데이트와 최적화를 담당하며, 구체적인 워크플로우는 다음과 같습니다:</p><ul><li><code>res-update-game.yml</code> 정기적으로 실행되어 지정된 저장소에서 게임 리소스를 가져옵니다</li><li><code>sync-resource.yml</code> 리소스를 MaaResource 저장소에 동기화하여 리소스 업데이트에 사용합니다</li><li><code>optimize-templates.yml</code> 템플릿 이미지 크기를 최적화합니다</li></ul><h2 id="웹사이트-구축" tabindex="-1"><a class="header-anchor" href="#웹사이트-구축"><span>웹사이트 구축</span></a></h2><p><code>website-workflow.yml</code></p><p>이 워크플로우는 주로 MAA 공식 웹사이트의 구축과 발행을 담당하며, 메인 페이지와 문서 두 구성 요소를 포함합니다.</p><p>참고로 웹사이트 발행은 릴리즈와 강하게 연결되어 있어서, 평상시 웹페이지 구성 요소를 수정할 때는 오류가 없는지 확인하기 위해 빌드만 진행하고, 릴리즈 시에만 실제로 Azure에 배포됩니다.</p><h2 id="issues-관리" tabindex="-1"><a class="header-anchor" href="#issues-관리"><span>Issues 관리</span></a></h2><p><code>issue-checker.yml</code></p><p>정규 표현식 매칭을 통해 각 Issue에 태그를 달아 Issue 내용을 분류하고 표시하여 조회와 관리를 용이하게 합니다.</p><p><code>issue-checkbox-checker.yml</code></p><p>정규 표현식 매칭을 통해 &quot;주의 깊게 읽지 않음&quot;을 체크한 Issue를 자동으로 닫습니다.<br> &quot;주의 깊게 읽지 않음&quot;이 체크되지 않은 경우 모든 체크박스를 접습니다.</p><p><code>stale.yml</code></p><p>90일 이상 활동이 없는 Bug Issue를 검사하여 표시하고 알림을 보내며, 7일 후에도 활동이 없으면 닫습니다.</p><h2 id="pull-requests-관리" tabindex="-1"><a class="header-anchor" href="#pull-requests-관리"><span>Pull Requests 관리</span></a></h2><p><code>pr-checker.yml</code></p><p>이 워크플로우는 PR의 Commit Message가 <a href="https://www.conventionalcommits.org/ko/v1.0.0/" target="_blank" rel="noopener noreferrer">관례적 커밋</a>을 준수하는지, 그리고 Merge Commit을 포함하는지 검사하며, 위 조건에 해당하면 알림을 제공합니다.</p><h2 id="mirrorchyan-관련" tabindex="-1"><a class="header-anchor" href="#mirrorchyan-관련"><span>MirrorChyan 관련</span></a></h2><p>MirrorChyan은 유료 업데이트 미러 서비스이며, 관련 워크플로우는 다음과 같습니다:</p><ul><li><code>mirrorchyan.yml</code> 업데이트 패키지를 MirrorChyan에 동기화</li><li><code>mirrorchyan_release_note.yml</code> MirrorChyan용 Release Note 생성</li></ul><h2 id="기타" tabindex="-1"><a class="header-anchor" href="#기타"><span>기타</span></a></h2><p><code>markdown-checker.yml</code></p><p>저장소의 모든 Markdown 파일에 유효하지 않은 링크가 포함되어 있는지 검사합니다.</p><p><code>blame-ignore.yml</code></p><p>Commit Message에 <code>blame ignore</code>가 포함된 커밋을 자동으로 무시하여 저장소 히스토리를 깔끔하게 유지합니다.</p><p><code>cache-delete.yml</code></p><p>PR 병합 후 관련 캐시를 정리하여 캐시 사용량을 절약합니다.</p>',54)]))}const s=a(i,[["render",l]]),p=JSON.parse('{"path":"/ko-kr/develop/ci-tutorial.html","title":"CI 시스템 해석","lang":"ko-kr","frontmatter":{"order":7,"icon":"devicon-plain:githubactions","description":"CI 시스템 해석 MAA는 Github Action을 활용하여 웹사이트 구축, 자동 리소스 업데이트, 최종 파일 빌드 및 릴리즈 등 대량의 자동화 작업을 완성했습니다. 시간이 지나면서 이러한 CI들은 점차 중첩되기 시작했고, 일부는 다른 저장소로 연결되기도 했습니다. 본 문서는 MAA의 CI 시스템을 개선하고자 하는...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CI 시스템 해석\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-08T13:10:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ko-kr/develop/ci-tutorial.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"CI 시스템 해석"}],["meta",{"property":"og:description","content":"CI 시스템 해석 MAA는 Github Action을 활용하여 웹사이트 구축, 자동 리소스 업데이트, 최종 파일 빌드 및 릴리즈 등 대량의 자동화 작업을 완성했습니다. 시간이 지나면서 이러한 CI들은 점차 중첩되기 시작했고, 일부는 다른 저장소로 연결되기도 했습니다. 본 문서는 MAA의 CI 시스템을 개선하고자 하는..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-08-08T13:10:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-08T13:10:55.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/develop/ci-tutorial.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/develop/ci-tutorial.html"}]]},"git":{"createdTime":1754658655000,"updatedTime":1754658655000,"contributors":[{"name":"ABA2396","username":"ABA2396","email":"99072975+ABA2396@users.noreply.github.com","commits":1,"url":"https://github.com/ABA2396"}]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"ko-kr/develop/ci-tutorial.md","autoDesc":true}');export{s as comp,p as data};
