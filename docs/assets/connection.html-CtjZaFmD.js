import{_ as t,c as l,b as i,a,e as s,d,w as o,r,o as p}from"./app-DbvXOh0a.js";const c={};function h(k,e){const n=r("RouteLink");return p(),l("div",null,[e[11]||(e[11]=i(`<h1 id="接続設定" tabindex="-1"><a class="header-anchor" href="#接続設定"><span>接続設定</span></a></h1><h2 id="adb-パス" tabindex="-1"><a class="header-anchor" href="#adb-パス"><span>ADB パス</span></a></h2><div class="hint-container info"><p class="hint-container-title">技術的詳細</p><p>自動検出ではエミュレータの ADB を使用しますが、自動検出に問題が発生することがあります。その場合、手動で設定する必要があります。<br><code>ADB の強制置換</code>は、Google が提供する ADB をダウンロードして置換することで、一度設定すれば解決します。</p></div><h3 id="エミュレータ提供の-adb-を使用する" tabindex="-1"><a class="header-anchor" href="#エミュレータ提供の-adb-を使用する"><span>エミュレータ提供の ADB を使用する</span></a></h3><p>エミュレータのインストールパスに移動し、Windows ではタスクマネージャでプロセスを右クリックし、「ファイルの場所を開く」を選択します。</p><p>最上位またはサブディレクトリに、<code>adb</code> を含む exe ファイルがあるはずです。検索機能を使用して選択します。</p><details class="hint-container details"><summary>いくつかの例</summary><p><code>adb.exe</code> <code>HD-adb.exe</code> <code>adb_server.exe</code> <code>nox_adb.exe</code></p></details><h3 id="google-提供の-adb-を使用する" tabindex="-1"><a class="header-anchor" href="#google-提供の-adb-を使用する"><span>Google 提供の ADB を使用する</span></a></h3><p><a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noopener noreferrer">ここをクリックしてダウンロード</a>し、解凍して、その中から <code>adb.exe</code> を選択します。</p><p>おすすめは、直接 <code>MAA</code> フォルダに解凍することです。そうすると、ADB パスに <code>.\\platform-tools\\adb.exe</code> を入力することができます。<code>MAA</code> フォルダと一緒に移動することもできます。</p><h2 id="接続アドレス" tabindex="-1"><a class="header-anchor" href="#接続アドレス"><span>接続アドレス</span></a></h2><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>ローカルで実行しているエミュレータの接続アドレスは <code>127.0.0.1:&lt;ポート番号&gt;</code> または <code>emulator-&lt;四桁の数字&gt;</code> です。</p></div><h3 id="ポート番号の取得" tabindex="-1"><a class="header-anchor" href="#ポート番号の取得"><span>ポート番号の取得</span></a></h3><h4 id="エミュレータ関連ドキュメントおよび参考ポート" tabindex="-1"><a class="header-anchor" href="#エミュレータ関連ドキュメントおよび参考ポート"><span>エミュレータ関連ドキュメントおよび参考ポート</span></a></h4><ul><li><a href="https://support.bluestacks.com/hc/zh-tw/articles/360061342631-%E5%A6%82%E4%BD%95%E5%B0%87%E6%82%A8%E7%9A%84%E6%87%89%E7%94%A8%E5%BE%9EBlueStacks-4%E8%BD%89%E7%A7%BB%E5%88%B0BlueStacks-5#%E2%80%9C2%E2%80%9D" target="_blank" rel="noopener noreferrer">Bluestacks 5</a> <code>5555</code></li><li><a href="https://mumu.163.com/mac/function/20240126/40028_1134600.html" target="_blank" rel="noopener noreferrer">MuMu Pro</a> <code>16384</code></li><li><a href="https://mumu.163.com/help/20230214/35047_1073151.html" target="_blank" rel="noopener noreferrer">MuMu 12</a> <code>16384</code></li><li><a href="https://bbs.xyaz.cn/forum.php?mod=viewthread&amp;tid=365537" target="_blank" rel="noopener noreferrer">逍遥</a> <code>21503</code></li><li><a href="https://support.yeshen.com/zh-CN/qt/ml" target="_blank" rel="noopener noreferrer">夜神</a> <code>62001</code></li></ul><p>他のエミュレータについては<a href="https://www.cnblogs.com/zhaoqingqing/p/15238464.html" target="_blank" rel="noopener noreferrer">Zhaoqingqing&#39;s Blog</a>を参照してください。</p><h4 id="多重起動について" tabindex="-1"><a class="header-anchor" href="#多重起動について"><span>多重起動について</span></a></h4><ul><li>MuMu 12 の多重起動マネージャーでは、実行中のポートを確認できます。</li><li>Bluestacks 5 の設定内で現在の多重ポートを確認できます。</li><li><em>追加予定</em></li></ul><details class="hint-container details"><summary>代替案</summary><ul><li><p>オプション 1 : ADB コマンドを使用してエミュレータのポートを確認します</p><ol><li><strong>単一</strong>のエミュレータを起動し、他に Android デバイスがこのコンピュータに接続されていないことを確認します。</li><li>ADB 実行可能ファイルが格納されているフォルダでターミナルを起動します。</li><li>次のコマンドを実行します。</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Windows コマンド プロンプト</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">adb</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> devices</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Windows PowerShell</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">\\</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">adb</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> devices</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下は、出力例です</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-text"><span class="line"><span>List of devices attached</span></span>
<span class="line"><span>127.0.0.1:&lt;ポート番号&gt;   device</span></span>
<span class="line"><span>emulator-&lt;四桁の数字&gt;  device</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>127.0.0.1:&lt;ポート&gt;</code> または <code>emulator-&lt;四桁の数字&gt;</code> を接続アドレスとして使用します。</p></li><li><p>方法2：すでに確立されたADB接続を検索する</p><ol><li>方法1を実行します。</li><li><code>Windowsキー+S</code> を押して検索バーを開き、「リソースモニター」を入力して開きます。</li><li><code>ネットワーク</code> タブに切り替えて、モニターするポート名であるシミュレータープロセス名（例：<code>HD-Player.exe</code>）を検索します。</li><li>シミュレータープロセスのすべてのリッスンポートを記録します。</li><li><code>TCP接続</code> タブの中で、<code>adb.exe</code> を探し、リモートポート列でシミュレーターリッスンポートに一致するポートを探します。</li></ol></li></ul></details><h3 id="自動的に複数のエミュレーターを起動する" tabindex="-1"><a class="header-anchor" href="#自動的に複数のエミュレーターを起動する"><span>自動的に複数のエミュレーターを起動する</span></a></h3>`,20)),a("p",null,[e[2]||(e[2]=s("複数のエミュレーターを同時に操作する場合、MAAフォルダを複数コピーし、")),e[3]||(e[3]=a("strong",null,"異なるMAA",-1)),e[4]||(e[4]=s("、")),e[5]||(e[5]=a("strong",null,"同じadb.exe",-1)),e[6]||(e[6]=s("、")),e[7]||(e[7]=a("strong",null,"異なる接続アドレス",-1)),e[8]||(e[8]=s(" を使用して接続します。")),e[9]||(e[9]=a("br",null,null,-1)),a("strong",null,[d(n,{to:"/ja-jp/manual/device/windows.html"},{default:o(()=>e[0]||(e[0]=[s("ブルースタックス国際版")])),_:1,__:[0]}),e[1]||(e[1]=s("を例に"))]),e[10]||(e[10]=s("、2つの多重起動エミュレーターの開始方法を紹介します。"))]),e[12]||(e[12]=i(`<h4 id="エミュレーターexeにコマンドを添付して複数起動する" tabindex="-1"><a class="header-anchor" href="#エミュレーターexeにコマンドを添付して複数起動する"><span>エミュレーターexeにコマンドを添付して複数起動する</span></a></h4><ol><li><strong>単一</strong>のエミュレーターを複数開始します。</li><li>タスクマネージャーを開き、該当するエミュレータープロセスを見つけます。詳細情報タブに移動し、列ヘッダーで右クリックし、「列の選択」をクリックし、「コマンドライン」を選択します。</li><li>追加された「コマンドライン」列で、「...\\Bluestacks_nxt\\HD-Player.exe」の後にある内容を見つけます。</li><li>見つけた <code>--instance Nougat32</code> のような内容を「起動設定」 - 「追加コマンド」に記入します。</li></ol><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>操作が終了したら、「ステップ2」で開いた「コマンドライン」列を再度非表示にすることをお勧めします。これにより、パフォーマンスの低下を防ぎます。</p></div><details class="hint-container details"><summary>例</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-text"><span class="line"><span>多開1:</span></span>
<span class="line"><span>エミュレーターパス: C:\\Program Files\\BlueStacks_nxt\\HD-Player.exe</span></span>
<span class="line"><span>追加コマンド: --instance Nougat32 --cmd launchApp --package &quot;com.hypergryph.arknights&quot;</span></span>
<span class="line"><span>多開2:</span></span>
<span class="line"><span>エミュレーターパス: C:\\Program Files\\BlueStacks_nxt\\HD-Player.exe</span></span>
<span class="line"><span>追加コマンド: --instance Nougat32_1 --cmd launchApp --package &quot;com.hypergryph.arknights.bilibili&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>--cmd launchApp --package</code> の部分は起動後に指定のパッケージ名のアプリを自動で起動するためのものであり、必要に応じて変更してください。</p></details><h4 id="シミュレーターやアプリを使用した複数起動の方法" tabindex="-1"><a class="header-anchor" href="#シミュレーターやアプリを使用した複数起動の方法"><span>シミュレーターやアプリを使用した複数起動の方法</span></a></h4><ol><li>マルチインスタンス管理ツールを開き、対応するシミュレーターのショートカットを追加します。</li><li>シミュレーターのショートカットのパスを「起動設定」-「シミュレーターのパス」に入力します。</li></ol><div class="hint-container tip"><p class="hint-container-title">ヒント</p><p>一部のシミュレーターはアプリケーションのショートカットを作成することができ、それを使用してシミュレーターを直接起動し、明日方舟を開くことができます。</p></div><details class="hint-container details"><summary>例</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-text"><span class="line"><span>多開1:</span></span>
<span class="line"><span>シミュレーターのパス: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\BlueStacks\\多開1.lnk</span></span>
<span class="line"><span>多開2:</span></span>
<span class="line"><span>シミュレーターのパス: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\BlueStacks\\多開2-明日方舟.lnk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>もし <code>シミュレータのパス</code> を使用して複数の起動操作を行う場合、<code>起動設定</code> - <code>追加コマンド</code> を空に設定することをお勧めします。</p><h3 id="bluestacksシミュレータ-hyper-v-启動ごとにポート番号が異なります" tabindex="-1"><a class="header-anchor" href="#bluestacksシミュレータ-hyper-v-启動ごとにポート番号が異なります"><span>BlueStacksシミュレータ Hyper-V 启動ごとにポート番号が異なります</span></a></h3><p><code>接続設定</code> で <code>接続構成</code> を <code>BlueStacksシミュレータ</code> に設定し、その後 <code>自動接続の検出</code> と <code>毎回再検出</code> をチェックします。</p><p>通常、これで接続できるはずです。接続できない場合、複数のシミュレータコアが存在するか、問題が発生している可能性がありますので、以下の追加設定をお読みください。</p><h4 id="bluestacks-config-keyword-を指定" tabindex="-1"><a class="header-anchor" href="#bluestacks-config-keyword-を指定"><span><code>Bluestacks.Config.Keyword</code> を指定</span></a></h4><div class="hint-container info"><p class="hint-container-title">注意</p><p>複数の起動機能が有効になっている場合や複数のシミュレータコアがインストールされている場合は、追加の設定が必要です。</p></div><p><code>.\\config\\gui.json</code> 内で <code>Bluestacks.Config.Keyword</code> フィールドを検索し、内容を <code>&quot;bst.instance.&lt;シミュレータ番号&gt;.status.adb_port&quot;</code> に設定します。シミュレータ番号はシミュレータパスの <code>BlueStacks_nxt\\Engine</code> 内で確認できます。</p><details class="hint-container details"><summary>例</summary><p>Nougat64 コア：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Bluestacks.Config.Keyword</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">bst.instance.Nougat64.status.adb_port</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Pie64_2 コア：（コア名の後の数字は複数の起動コアを示します）</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Bluestacks.Config.Keyword</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">bst.instance.Pie64_2.status.adb_port</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h4 id="bluestacks-config-path-を指定" tabindex="-1"><a class="header-anchor" href="#bluestacks-config-path-を指定"><span><code>Bluestacks.Config.Path</code> を指定</span></a></h4><div class="hint-container info"><p class="hint-container-title">注意</p><p>MAA は現在 <code>bluestacks.conf</code> の保存場所をレジストリから読み取ろうとしますが、この機能が機能しない場合は、手動で設定ファイルのパスを指定する必要があります。</p></div><ol><li><p>ブルースタックスシミュレータのデータディレクトリ内にある <code>bluestacks.conf</code> ファイルを見つけます。</p><ul><li>国際版のデフォルトパスは <code>C:\\ProgramData\\BlueStacks_nxt\\bluestacks.conf</code> です。</li><li>中国本土版のデフォルトパスは <code>C:\\ProgramData\\BlueStacks_nxt_cn\\bluestacks.conf</code> です。</li></ul></li><li><p>初めて使用する場合は、一度 MAA を実行して、MAA が設定ファイルを自動生成するようにします。</p></li><li><p><strong>MAA を閉じた後に</strong>、<code>gui.json</code> を開き、<code>Configurations</code> の下の現在の設定名フィールド（設定-切り替え設定 で確認できます。デフォルトは <code>Default</code>）を検索し、<code>Bluestacks.Config.Path</code> フィールドを検索して、<code>bluestacks.conf</code> の完全なパスを入力します。（スラッシュはエスケープ <code>\\\\</code> を使用してください）</p></li></ol><details class="hint-container details"><summary>例</summary><p><code>C:\\ProgramData\\BlueStacks_nxt\\bluestacks.conf</code> を使用しています。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">  &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Configurations</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Default</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">      &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Bluestacks.Config.Path</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">C:</span><span style="--shiki-light:#EE0000;--shiki-dark:#EBCB8B;">\\\\</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">ProgramData</span><span style="--shiki-light:#EE0000;--shiki-dark:#EBCB8B;">\\\\</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">BlueStacks_nxt</span><span style="--shiki-light:#EE0000;--shiki-dark:#EBCB8B;">\\\\</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">bluestacks.conf</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">      // 残りの構成フィールドは、手入力しないで修正します。</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">  }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="接続設定-1" tabindex="-1"><a class="header-anchor" href="#接続設定-1"><span>接続設定</span></a></h2><p>対応するエミュレーターの設定を選択してください。リストにない場合は汎用設定を選択してください。汎用設定が利用できない場合は他の利用可能な設定を試し、選択してください。</p><p>具体的な違いについては、<a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/dev/resource/config.json#L65" target="_blank" rel="noopener noreferrer">ソースコード</a>をご覧ください。</p><h3 id="mumu-スクリーンショット強化モード" tabindex="-1"><a class="header-anchor" href="#mumu-スクリーンショット強化モード"><span>MuMu スクリーンショット強化モード</span></a></h3><p>公式版 または Arknights Edition MuMu 12 V4.1.26 以降のバージョンに対応しています。</p><ol><li><p><code>設定</code> - <code>接続設定</code> で <code>MuMu のスクリーンショット拡張モードを有効にする</code> をチェックします。MAAは、スイッチをチェックすると、レジストリを通じてインストールパスを自動的に入力しようとします。</p></li><li><p><code>MuMu12 エミュレーターパス</code> には <code>MuMu Player 12</code> または <code>MuMuPlayerGlobal-12.0</code> または <code>YXArkNights-12.0</code> フォルダのパスを入力してください。例: <code>C:\\Program Files\\Netease\\MuMuPlayerGlobal-12.0</code>。</p></li><li><p>MuMu ネットワークブリッジを使用している場合は、<code>MuMu ネットワークブリッジモード</code> を選択し、MuMu マルチインスタンスマネージャ内の対応するエミュレータのシリアル番号を手動で入力する必要があります。例えば、メインインスタンスは <code>0</code> です。</p></li></ol><h3 id="ldplayer-スクリーンショット強化モード" tabindex="-1"><a class="header-anchor" href="#ldplayer-スクリーンショット強化モード"><span>LDPlayer スクリーンショット強化モード</span></a></h3><p>LDPlayerの正式版9 V9.1.32 以降を使用する必要があります。</p><ol><li><p><code>設定</code> - <code>接続設定</code> で <code>LD のスクリーンショット拡張モードを有効にする</code> にチェックします。MAAは、スイッチをチェックすると、レジストリを通じてインストールパスを自動的に入力しようとします。</p></li><li><p><code>LD エミュレータパス</code> には <code>LDPlayer9</code> フォルダのパスを入力してください。例： <code>C:\\leidian\\LDPlayer9\\</code>。</p></li><li><p><code>インスタンス番号</code> には LD マルチインスタンス内でのエミュレーターの番号を入力してください。主インスタンスの場合は <code>0</code> です。</p></li></ol><h2 id="タッチモード" tabindex="-1"><a class="header-anchor" href="#タッチモード"><span>タッチモード</span></a></h2><ol><li><a href="https://github.com/DeviceFarmer/minitouch" target="_blank" rel="noopener noreferrer">Minitouch</a>：Android タッチイベントを操作するための C 言語で書かれたツールで、<code>evdev</code> デバイスを操作し、外部プログラムがタッチイベントとジェスチャーをトリガーできる Socket インターフェースを提供します。Android 10 以降、SELinux が <code>Enforcing</code> モードの場合、Minitouch は使用できなくなりました。<sup><a href="https://github.com/DeviceFarmer/minitouch?tab=readme-ov-file#for-android-10-and-up" target="_blank" rel="noopener noreferrer">出典</a></sup></li><li><a href="https://github.com/MaaAssistantArknights/MaaTouch" target="_blank" rel="noopener noreferrer">MaaTouch</a>：MAA による Java で Minitouch を再実装し、Android の <code>InputDevice</code> を使用し、追加の機能を付加しました。高バージョンの Android での利用可能性はまだテスト中です。<s>テストを手伝ってください</s></li><li>Adb Input：直接 ADB を呼び出して、Android の <code>input</code> コマンドを使用してタッチ操作を行います。最も互換性があり、最も遅い速度です。</li></ol><h2 id="adb-lite" tabindex="-1"><a class="header-anchor" href="#adb-lite"><span>ADB Lite</span></a></h2><p>MAA によって独自に実装された ADB クライアントで、オリジナルの ADB よりも多重の ADB プロセスを開始せずに済み、パフォーマンスの低下を抑えることができますが、一部のスクリーンショット方法は使用できません。</p><p>推奨されますが、具体的な利点と欠点はまだフィードバックを得ていません。<s>テストを手伝ってください x2</s></p>`,34))])}const g=t(c,[["render",h]]),m=JSON.parse('{"path":"/ja-jp/manual/connection.html","title":"接続設定","lang":"ja-jp","frontmatter":{"order":3,"icon":"mdi:plug","description":"接続設定 ADB パス 技術的詳細 自動検出ではエミュレータの ADB を使用しますが、自動検出に問題が発生することがあります。その場合、手動で設定する必要があります。 ADB の強制置換は、Google が提供する ADB をダウンロードして置換することで、一度設定すれば解決します。 エミュレータ提供の ADB を使用する エミュレータのインストール...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接続設定\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-16T17:24:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaAssistantArknights\\"}]}"],["meta",{"property":"og:url","content":"https://maa.plus/docs/ja-jp/manual/connection.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"接続設定"}],["meta",{"property":"og:description","content":"接続設定 ADB パス 技術的詳細 自動検出ではエミュレータの ADB を使用しますが、自動検出に問題が発生することがあります。その場合、手動で設定する必要があります。 ADB の強制置換は、Google が提供する ADB をダウンロードして置換することで、一度設定すれば解決します。 エミュレータ提供の ADB を使用する エミュレータのインストール..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ja-jp"}],["meta",{"property":"og:locale:alternate","content":"ko-kr"}],["meta",{"property":"og:locale:alternate","content":"en-us"}],["meta",{"property":"og:locale:alternate","content":"zh-tw"}],["meta",{"property":"og:locale:alternate","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2025-07-16T17:24:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T17:24:35.000Z"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://maa.plus/docs/ko-kr/manual/connection.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maa.plus/docs/en-us/manual/connection.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://maa.plus/docs/zh-tw/manual/connection.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maa.plus/docs/zh-cn/manual/connection.html"}]]},"git":{"createdTime":1752686675000,"updatedTime":1752686675000,"contributors":[{"name":"MistEO","username":"MistEO","email":"mistereo@hotmail.com","commits":1,"url":"https://github.com/MistEO"}]},"readingTime":{"minutes":4.07,"words":1222},"filePathRelative":"ja-jp/manual/connection.md","autoDesc":true}');export{g as comp,m as data};
