name: gen-changelog

on:
  pull_request:
    types: 
      - opened
      - reopened
      - ready_for_review
  workflow_dispatch:

jobs:
  gen:
    # startsWith 表达式不区分大小写
    if: github.event.pull_request.draft == false && startsWith(github.event.pull_request.title, 'Release v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: Extract tag name
        id: extract_tag
        env:
          PR_BODY: ${{ format('{0}/{1}', runner.temp, 'output' ) }}
        run: |
          output() {
            echo "$1=$2" >> $GITHUB_OUTPUT
          }

          tag_name=$(echo "${{ github.event.pull_request.title }}" | sed -E 's/(Release|release)//' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          output tag_name $tag_name

          pr_title="docs: Auto Update Changelogs of "$tag_name
          output pr_title $pr_title

          latest_stable_tag=$(git tag -l 'v*' | grep -v '-' | sort -V | tail -n 1) # 上一个 stable 版本
          newest_tag=$(git describe --tags --match "v*" --abbrev=0) # 最新版本
          output latest_stable_tag $latest_stable_tag
          output newest_tag $newest_tag

          if [[ $tag_name == *-* ]]; then # 判断新版本是否为 beta 版本
            latest=$newest_tag            # 若是，则将 latest 参数设置为最新版本
          else
            latest=$latest_stable_tag     # 若否，则设置为上一个 stable 版本
          fi

          output latest $latest

          log() {
            echo "$1" >> $PR_BODY
          }

          log 'Target RP: ${{ github.event.pull_request.html_url }}'
          log ''
          log '```'
          log '<details><summary>Debug info</summary>'
          log '```'
          log ''
          sed 's/=/: /1' $GITHUB_OUTPUT >> $PR_BODY
          log ''
          log '</details>'

          cat $PR_BODY

      - name: Generate Changelog
        run: |
          git switch dev
          python3 tools/ChangelogGenerator/changelog_generator.py --tag "${{ steps.extract_tag.outputs.tag_name }}" --latest "${{ steps.extract_tag.outputs.latest }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add files to git
        run: |
          git status

          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .

          commit_msg="docs: Auto Generate Changelog of Release ""${{ steps.extract_tag.outputs.tag_name }}"
          git commit -m "$commit_msg"

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ steps.extract_tag.outputs.pr_title }}
          body-path: ${{ format('{0}/{1}', runner.temp, 'output' ) }}
          base: "dev"
          branch: "changelog"
          delete-branch: true
          reviewers: |
            AnnAngela
          assignees: |
            AnnAngela

      - name: Add reviewers to release PR
        uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: ".github/release_reviewers.yaml"
