name: smoke-testing

on:
  push:
    paths:
      - "3rdparty/include/**"
      - "include/**"
      - "src/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - "MAA.sln"
      - "resource/**"
      - "MaaDeps/**"
      - "!**/*.md"
  pull_request:
    paths:
      - "3rdparty/include/**"
      - "include/**"
      - "src/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - "MAA.sln"
      - "resource/**"
      - "MaaDeps/**"
      - "!**/*.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Prevent duplicate runs on organization branches with PRs
    if: github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name !=
      github.event.pull_request.base.repo.full_name
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          submodules: recursive

      - name: Cache .nuke/temp, ~/.nuget/packages
        id: cache-nuget
        uses: actions/cache@v4
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-x64-${{ hashFiles('**/global.json', '**/*.csproj') }}

      - name: Restore dependencies
        if: steps.cache-nuget.outputs.cache-hit != 'true'
        run: dotnet restore

      - name: Cache MaaDeps
        id: cache-maadeps
        uses: actions/cache@v4
        with:
          path: |
            ./MaaDeps
          key: ${{ runner.os }}-x64-maadeps-${{ hashFiles('./maadeps-download.py') }}

      - name: Bootstrap MaaDeps
        if: steps.cache-maadeps.outputs.cache-hit != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-windows

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build MaaSample
        run: |
          MSBUILD src/Cpp/MaaSample.slnf -t:restore,build -p:Configuration="Debug" -p:Platform="x64" -m

      - name: Run tests
        run: |
          $clients = @("Official", "YostarJP", "YostarEN", "YostarKR", "txwy")
          $jobs = @()
          $error_client = @()
          foreach ($client in $clients) {
            $jobs += Start-Job -ScriptBlock {
              param ($client)
              ./x64/Debug/Sample.exe $client > "./x64/Debug/debug/asst_$client.log"

              if ($LASTEXITCODE -ne 0) {
                return $client
              }
            } -ArgumentList $client
          }

          foreach ($job in $jobs) {
            $result = Receive-Job -Job $job -Wait
            Remove-Job -Job $job

            if ($result) {
              $error_client += $result
            }
          }

          Remove-Item ./x64/Debug/debug/asst.log -ErrorAction SilentlyContinue
          foreach ($client in $clients) {
            Get-Content ./x64/Debug/debug/asst_$client.log | Add-Content ./x64/Debug/debug/asst.log
          }

          if ($error_client.Count -gt 0) {
            $pattern = "load failed"
            foreach ($client in $error_client) {
              Get-Content ./x64/Debug/debug/asst_$client.log | ForEach-Object {
                if ($_ -match $pattern) {
                  Write-Host $_ -ForegroundColor DarkRed
                } else {
                  Write-Host $_
                }
              }
            }
            exit 1
          }

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./x64/Debug/debug
