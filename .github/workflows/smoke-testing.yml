name: smoke-testing

on:
  push:
    paths:
      - ".github/workflows/smoke-testing.yml"
      - "3rdparty/include/**"
      - "include/**"
      - "src/Cpp/**"
      - "src/MaaCore/**"
      - "resource/**"
      - "!**/*.md"
      - "cmake/**"
      - "CMakeLists.txt"
      - "tools/maadeps-download.py"
  pull_request:
    paths:
      - ".github/workflows/smoke-testing.yml"
      - "3rdparty/include/**"
      - "include/**"
      - "src/Cpp/**"
      - "src/MaaCore/**"
      - "resource/**"
      - "!**/*.md"
      - "cmake/**"
      - "CMakeLists.txt"
      - "tools/maadeps-download.py"
  workflow_dispatch:

jobs:
  smoke-testing:
    # Prevent duplicate runs on organization branches with PRs
    if: github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name !=
      github.event.pull_request.base.repo.full_name
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          show-progress: false

      - name: Generate cache key
        id: cache_key
        run: |
          echo "key=Smoke-testing-${{ hashFiles('src/Cpp/**', 'src/MaaCore/**', '3rdparty/include/**', 'include/**', 'cmake/**', 'CMakeLists.txt', 'tools/maadeps-download.py', 'tools/linux-toolchain-download.py') }}" >> $GITHUB_OUTPUT

      - name: Restore cache smoke-testing
        id: smoke-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ steps.cache_key.outputs.key }}
          path: |
            ./install/libfastdeploy_ppocr.dylib
            ./install/libMaaCore.dylib
            ./install/libonnxruntime.1.19.2.dylib
            ./install/libopencv_world4.4.11.0.dylib
            ./install/smoke_test

      - name: Fetch submodules
        if: steps.smoke-cache.outputs.cache-hit != 'true'
        run: |
          git submodule update --init --depth 1 3rdparty/EmulatorExtras

      - name: Cache MaaDeps
        if: steps.smoke-cache.outputs.cache-hit != 'true'
        id: maadeps-cache
        uses: actions/cache@v4
        with:
          path: ./MaaDeps
          key: ${{ runner.os }}-arm64-maadeps-${{ hashFiles('tools/maadeps-download.py') }}

      - name: Bootstrap MaaDeps
        if: steps.smoke-cache.outputs.cache-hit != 'true' && steps.maadeps-cache.outputs.cache-hit != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 tools/maadeps-download.py arm64-osx

      - name: Config cmake
        if: steps.smoke-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p build
          cmake -B build -GNinja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DMAADEPS_TRIPLET='maa-arm64-osx' \
            -DBUILD_SMOKE_TEST=ON \
            -DINSTALL_RESOURCE=ON

      - name: Build
        if: steps.smoke-cache.outputs.cache-hit != 'true'
        run: |
          cmake --build build --config Debug --parallel $(sysctl -n hw.logicalcpu)

      - name: Install
        if: steps.smoke-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p install
          cmake --install build --prefix install --config Debug

      - name: Run tests
        run: |
          brew install bash

          ./tools/SmokeTesting/run_tests.sh

      - name: Save cache smoke-testing (only in dev)
        if: steps.smoke-cache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/dev'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache_key.outputs.key }}
          path: |
            ./install/libfastdeploy_ppocr.dylib
            ./install/libMaaCore.dylib
            ./install/libonnxruntime.1.19.2.dylib
            ./install/libopencv_world4.4.11.0.dylib
            ./install/smoke_test

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./install/debug
