name: PR Checker

on:
  pull_request:
    types: [opened, edited, ready_for_review, reopened, synchronize]

jobs:
  check_commit_name_in_pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检查 PR 是否已合并
        id: pr_status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            if (pr.merged) {
              console.log("PR(${context.payload.inputs.pr_number}) 已合并");
            } else {
              console.log("PR(${context.payload.inputs.pr_number}) 未合并");
            }
            core.setOutput("pr_merged", pr.merged);

      - name: Check Commit Message
        if: ${{ steps.pr_status.outputs.pr_merged == 'False' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const regex = /^((build|chore|ci|docs?|feat|fix|perf|refactor|rft|style|test|i18n)[\:\.\(\,]|[Rr]evert|[Rr]elease)/;
            const invalidCommits = commits.filter(commit => !regex.test(commit.commit.message));
            
            console.log(`check ${commits.length} commit(s)`);
            
            if (invalidCommits.length > 0) {
              const invalidCommitMessages = invalidCommits.map(commit => commit.commit.message);
              core.setFailed(`Invalid commit message found: ${invalidCommitMessages.join(", ")}`);
            }
