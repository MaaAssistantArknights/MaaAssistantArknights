name: release-ota

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      limit:
        description: 'Number of releases to fetch from MaaAssistantArknights, 2 at least'
        required: false
        default: 31
        type: number
      limit_2:
        description: 'Number of releases to fetch from MaaRelease'
        required: false
        default: 30

jobs:
  make-ota:
    runs-on: "ubuntu-latest"
    matrix: 
      target: [x64, arm64]
    steps:
      - name: "Fetch MaaRelease"
        uses: actions/checkout@v3
        with:
          repository: ${{ format('{0}/{1}', github.repository_owner, 'MaaRelease') }}
          path: MaaRelease
          fetch-depth: 0
          token: ${{ secrets.MAARELEASE_RELEASE }}
      - uses: actions/checkout@v3
        with:
          path: MaaAssistantArknights
      - name: "Fetch release info"
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -pv build-ota && cd build-ota
          gh release list --repo 'MaaAssistantArknights/MaaAssistantArknights' --limit ${{ inputs.limit || 31 }} | tee ./release_maa.txt
          gh release list --repo "MaaAssistantArknights/MaaRelease" --limit ${{ inputs.limit_2 || 30 }} | tee ./release_mr.txt
          head -n 1 ./release_maa.txt | awk '{ print $1 }' > ./config

          tail -n +1 ./release_maa.txt | awk '{ print $1 }' > ./tags_maa.txt
          cat ./release_mr.txt | awk '{ print $1 }' > ./tags_mr.txt

          comm <(sort ./tags_maa.txt) <(sort ./tags_mr.txt) | awk '{ print $1 }' >> ./config

          echo "config:"
          cat ./config

          echo "prerelease=$([ $(head -n 1 release_maa.txt | awk '{ print $2}') = 'Pre-release' ] && echo true || echo false)" >> $GITHUB_ENV
          echo "release_tag=$(head -n 1 ./config)" >> $GITHUB_ENV
      - name: "Download latest version for server"
        run: |
          mkdir -pv build-ota/${{ env.release_tag }}
          cd build-ota/${{ env.release_tag }}
          mkdir -pv content
          gh release download ${{ env.release_tag }} --repo 'MaaAssistantArknights/MaaAssistantArknights' --pattern "MAA-${{ env.release_tag }}-win-${{ matrix.target }}.zip" --clobber
          unzip -q -O GB2312 -o "*.zip" -d 'content'
          mv *.zip ..
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build OTA"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd build-ota
          $GITHUB_WORKSPACE/MaaAssistantArknights/tools/OTAPacker/build.sh 'MaaAssistantArknights/MaaAssistantArknights' ./config ${{ matrix.target }} 'MaaAssistantArknights/MaaRelease'
      - name: "Commit and setup tag"
        run: |
          cd MaaRelease
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout --orphan __temp
          git rm -rf .
          git commit --allow-empty --message ${{ env.release_tag }}
          git tag ${{ env.release_tag }} || exit 0 # do nothing if the tag already exists
          git push --tags
        env:
          PUSH_REMOTE: https://github-actions[bot]:${{ secrets.MAARELEASE_RELEASE }}@github.com/${{ github.repository_owner }}/MaaRelease
      - name: "Upload to MaaRelease"
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: ${{ format('{0}/{1}', github.repository_owner, 'MaaRelease') }}
          repo_token: ${{ secrets.MAARELEASE_RELEASE }}
          file_glob: true
          file: build-ota/*.zip
          tag: ${{ env.release_tag }}
          prerelease: ${{ env.prerelease }}
          overwrite: true
      - name: "Upload to server"
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_ID }}
          source: "build-ota/*.zip"
          strip_components: 1
          target: ${{ format('{0}/{1}', 'OTA/MaaAssistantArknights/MaaRelease/releases/download', env.release_tag) }}
