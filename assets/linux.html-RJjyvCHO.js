import{_ as r,c as l,a,e as n,b as i,d as t,w as o,r as d,o as h}from"./app-DVo-l1cf.js";const p={},c={class:"hint-container tip"};function k(g,e){const s=d("VPLink");return h(),l("div",null,[e[15]||(e[15]=a("h2",{id:"준비-작업",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#준비-작업"},[a("span",null,"준비 작업")])],-1)),e[16]||(e[16]=a("p",null,"다음중 하나의 설치 방법을 선택하세요.",-1)),e[17]||(e[17]=a("h3",{id:"maa-cli-사용",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#maa-cli-사용"},[a("span",null,"maa-cli 사용")])],-1)),a("p",null,[e[1]||(e[1]=a("a",{href:"https://github.com/MaaAssistantArknights/maa-cli",target:"_blank",rel:"noopener noreferrer"},"maa-cli",-1)),e[2]||(e[2]=i("는 Rust로 작성된 간단한 MAA 커맨드 라인 도구입니다. 관련 설치 및 사용 방법은 ",-1)),t(s,{href:"../cli/"},{default:o(()=>[...e[0]||(e[0]=[i("CLI 가이드",-1)])]),_:1}),e[3]||(e[3]=i("를 참조하세요.",-1))]),e[18]||(e[18]=n('<h3 id="wine-사용" tabindex="-1"><a class="header-anchor" href="#wine-사용"><span>Wine 사용</span></a></h3><p>MAA WPF GUI는 현재 Wine을 통해 실행할 수 있습니다.</p><h4 id="설치-단계" tabindex="-1"><a class="header-anchor" href="#설치-단계"><span>설치 단계</span></a></h4><ol><li><p><a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0" target="_blank" rel="noopener noreferrer">.NET 릴리스 페이지</a>에서 Windows용 .NET <strong>데스크톱</strong> 런타임을 다운로드하고 설치합니다.</p></li><li><p>Windows용 MAA를 다운로드하고 압축을 푼 후 <code>wine MAA.exe</code>를 실행합니다.</p></li></ol><div class="hint-container info"><p class="hint-container-title">주의</p><p>연결 설정에서 ADB 경로를 <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noopener noreferrer">Windows용 <code>adb.exe</code></a>로 설정해야 합니다.</p><p>ADB를 통해 USB 장치에 연결해야 하는 경우, 먼저 Wine 외부에서 <code>adb start-server</code>를 실행하여 네이티브 ADB 서버에 Wine을 통해 연결하세요.</p></div><h4 id="linux-네이티브-maacore-사용-실험적-기능" tabindex="-1"><a class="header-anchor" href="#linux-네이티브-maacore-사용-실험적-기능"><span>Linux 네이티브 MaaCore 사용 (실험적 기능)</span></a></h4><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/tree/dev/src/MaaWineBridge" target="_blank" rel="noopener noreferrer">MAA Wine Bridge</a> 소스 코드를 다운로드하고 빌드하여, 생성된 <code>MaaCore.dll</code>(ELF 파일)로 Windows 버전을 교체하고, Linux 네이티브 동적 라이브러리(<code>libMaaCore.so</code> 및 종속성)를 같은 디렉토리에 넣습니다.</p><p>이때 Wine을 통해 <code>MAA.exe</code>를 실행하면 Linux 네이티브 동적 라이브러리가 로드됩니다.</p><div class="hint-container info"><p class="hint-container-title">주의</p><p>Linux 네이티브 MaaCore를 사용할 때는 연결 설정에서 ADB 경로를 Linux 네이티브 ADB로 설정해야 합니다.</p></div><h4 id="linux-데스크톱-통합-실험적-기능" tabindex="-1"><a class="header-anchor" href="#linux-데스크톱-통합-실험적-기능"><span>Linux 데스크톱 통합 (실험적 기능)</span></a></h4><p>데스크톱 통합은 네이티브 데스크톱 알림 지원과 fontconfig 글꼴 구성을 WPF에 매핑하는 기능을 제공합니다.</p><p>MAA Wine Bridge에서 생성된 <code>MaaDesktopIntegration.so</code>를 <code>MAA.exe</code>와 같은 디렉토리에 넣으면 활성화됩니다.</p><h4 id="알려진-문제" tabindex="-1"><a class="header-anchor" href="#알려진-문제"><span>알려진 문제</span></a></h4><ul><li>Wine DirectWrite는 강제로 힌팅을 활성화하고 DPI를 FreeType에 전달하지 않아 글꼴 표시 효과가 좋지 않습니다.</li><li>네이티브 데스크톱 알림을 사용하지 않을 때, 팝업 알림이 전체 시스템의 마우스 포커스를 빼앗아 다른 창을 조작할 수 없게 됩니다. <code>winecfg</code>를 통해 가상 데스크톱 모드를 활성화하거나 데스크톱 알림을 비활성화하여 완화할 수 있습니다.</li><li>Wine-staging 사용자는 MAA가 Wine 환경을 올바르게 감지할 수 있도록 <code>winecfg</code>의 <code>Wine 버전 숨기기</code> 옵션을 비활성화해야 합니다.</li><li>Wine의 Light 테마는 WPF에서 일부 텍스트 색상 이상을 일으키므로, <code>winecfg</code>에서 테마 없음(Windows 클래식 테마)으로 전환하는 것을 권장합니다.</li><li>Wine은 구식 XEmbed 트레이 아이콘을 사용하므로 GNOME에서 정상적으로 작동하지 않을 수 있습니다.</li><li>Linux 네이티브 MaaCore를 사용할 때는 자동 업데이트가 지원되지 않습니다 (<s>업데이트 프로그램: 내가 Windows 버전을 다운로드해야 한다고?</s>)</li></ul><h3 id="python-사용" tabindex="-1"><a class="header-anchor" href="#python-사용"><span>Python 사용</span></a></h3><h4 id="_1-maa-동적-라이브러리-설치" tabindex="-1"><a class="header-anchor" href="#_1-maa-동적-라이브러리-설치"><span>1. MAA 동적 라이브러리 설치</span></a></h4><ol><li><p><a href="https://maa.plus/" target="_blank" rel="noopener noreferrer">MAA 공식 웹사이트</a>에서 리눅스 라이브러리를 다운로드하고 압축을 풉니다. 혹은 소프트웨어 저장소에서 설치합니다:</p><ul><li>AUR：<a href="https://aur.archlinux.org/packages/maa-assistant-arknights" target="_blank" rel="noopener noreferrer">maa-assistant-arknights</a>을 설치한 후에 설치 지침에 따라 파일을 편집합니다.</li><li>Nixpkgs: <a href="https://github.com/NixOS/nixpkgs/blob/nixos-unstable/pkgs/by-name/ma/maa-assistant-arknights/package.nix" target="_blank" rel="noopener noreferrer">maa-assistant-arknights</a></li></ul></li><li><p><code>./MAA-v{버전}-linux-{아키텍처}/Python/</code> 폴더로 이동하여 <code>sample.py</code> 파일을 엽니다.</p></li></ol>',17)),a("div",c,[e[7]||(e[7]=a("p",{class:"hint-container-title"},"팁",-1)),a("p",null,[e[5]||(e[5]=i("사전 컴파일된 버전은 상대적으로 최신 버전의 리눅스 배포판 (Ubuntu 22.04)에서 컴파일된 동적 라이브러리를 포함하고 있습니다. 시스템의 libstdc++ 버전이 오래되어 ABI 호환성 문제가 발생할 수 있습니다. ",-1)),t(s,{href:"../../develop/linux-tutorial.md"},{default:o(()=>[...e[4]||(e[4]=[i("Linux 컴파일 가이드",-1)])]),_:1}),e[6]||(e[6]=i("를 참조하여 다시 컴파일하거나 컨테이너를 실행할 수 있습니다.",-1))])]),e[19]||(e[19]=n(`<h4 id="_2-adb-구성" tabindex="-1"><a class="header-anchor" href="#_2-adb-구성"><span>2. <code>adb</code> 구성</span></a></h4><ol><li><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L48" target="_blank" rel="noopener noreferrer"><code>if asst.connect(&#39;adb.exe&#39;, &#39;127.0.0.1:5554&#39;):</code></a> 줄을 찾습니다.</p></li><li><p><code>adb</code> 도구 호출</p><ul><li>에뮬레이터가 <code>Android Studio</code>의 <code>avd</code>를 사용하는 경우 <code>adb</code>가 내장되어 있습니다. <code>adb.exe</code> 필드에 <code>adb</code> 경로를 입력합니다. 일반적으로 <code>$HOME/Android/Sdk/platform-tools/</code> 폴더에 있습니다. 예시:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asst.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/home/foo/Android/Sdk/platform-tools/adb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;모바일 에뮬레이터의 adb 주소&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>다른 에뮬레이터를 사용하는 경우 <code>adb</code>를 먼저 다운로드해야 합니다: <code>$ sudo apt install adb</code>를 실행한 후 경로를 입력하거나 <code>PATH</code> 환경 변수를 사용하여 <code>adb</code>를 입력합니다.</li></ul></li><li><p>에뮬레이터의 <code>adb</code> 경로 확인:</p><ul><li>직접 <code>adb</code> 도구를 사용할 수 있습니다: <code>$ adb경로 devices</code>를 실행하면 됩니다. 예시:</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/foo/Android/Sdk/platform-tools/adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devices</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">List</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devices</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> attached</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">emulator-5554</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> device</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>반환된 <code>emulator-5554</code>가 에뮬레이터의 <code>adb</code> 주소이므로 <code>127.0.0.1:5555</code>를 덮어씁니다. 예를 들어:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asst.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/home/foo/Android/Sdk/platform-tools/adb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;emulator-5554&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>이제 테스트를 진행해볼 수 있습니다: <code>$ python3 sample.py</code>를 실행한 후 연결 성공이 표시되면 대부분의 작업이 완료된 것입니다.</p></li></ol><h4 id="_3-작업-설정" tabindex="-1"><a class="header-anchor" href="#_3-작업-설정"><span>3. 작업 설정</span></a></h4>`,3)),a("p",null,[e[9]||(e[9]=i("사용자 정의 작업: ",-1)),t(s,{href:"../../protocol/integration.md"},{default:o(()=>[...e[8]||(e[8]=[i("통합 문서",-1)])]),_:1}),e[10]||(e[10]=i("를 참조하고, ",-1)),e[11]||(e[11]=a("code",null,"sample.py",-1)),e[12]||(e[12]=i("의 # 작업 및 매개 변수는 ",-1)),e[13]||(e[13]=a("a",{href:"https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L54",target:"_blank",rel:"noopener noreferrer"},"예제",-1)),e[14]||(e[14]=i("를 참조해 줄을 수정하세요.",-1))]),e[20]||(e[20]=n('<h2 id="모바일-에뮬레이터-지원" tabindex="-1"><a class="header-anchor" href="#모바일-에뮬레이터-지원"><span>모바일 에뮬레이터 지원</span></a></h2><h3 id="✅-avd" tabindex="-1"><a class="header-anchor" href="#✅-avd"><span>✅ <a href="https://developer.android.com/studio/run/managing-avds" target="_blank" rel="noopener noreferrer">AVD</a></span></a></h3><p>필수 구성: 16:9 비율의 화면 해상도이며 해상도는 720p보다 커야 합니다.</p><p>권장 구성: MAA의 리눅스 x64 동적 라이브러리와 함께 x86_64 프레임워크 (R - 30 - x86_64 - Android 11.0) 사용</p><p>참고: Android 10 이상에서는 SELinux가 <code>Enforcing</code> 모드인 경우 <code>Minitouch</code>를 사용할 수 없습니다. 다른 터치 모드로 전환하거나 SELinux를 <strong>임시</strong>로 <code>Permissive</code> 모드로 전환하세요.</p><h3 id="⚠️-genymotion" tabindex="-1"><a class="header-anchor" href="#⚠️-genymotion"><span>⚠️ <a href="https://www.genymotion.com/" target="_blank" rel="noopener noreferrer">Genymotion</a></span></a></h3><p>상위 안드로이드 버전에는 x86_64 프레임워크가 기본으로 포함되어 있습니다. 가볍지만 Arknights를 실행하는 동안 종종 비정상 종료됩니다.</p><p>엄격한 테스트가 아직 진행되지 않았으며 adb 기능 및 경로 검색에 문제가 없습니다.</p><h2 id="안드로이드-컨테이너-지원" tabindex="-1"><a class="header-anchor" href="#안드로이드-컨테이너-지원"><span>안드로이드 컨테이너 지원</span></a></h2><div class="hint-container tip"><p class="hint-container-title">팁</p><p>다음 솔루션은 일반적으로 커널 모듈을 필요로 합니다. 해당 솔루션 및 배포판에 맞는 내부 모듈을 설치하세요.</p></div><h3 id="✅-waydroid" tabindex="-1"><a class="header-anchor" href="#✅-waydroid"><span>✅ <a href="https://waydro.id/" target="_blank" rel="noopener noreferrer">Waydroid</a></span></a></h3><p>설치 후 해상도를 다시 설정해야 합니다. (또는 720P 이상이고 16:9 비율의 해상도를 사용하고 다시 시작해야 합니다):</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">waydroid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> persist.waydroid.width</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1280</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">waydroid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> persist.waydroid.height</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 720</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>adb의 IP 주소 설정: <code>설정</code> - <code>정보</code> - <code>IP 주소</code>를 열고 첫 번째 <code>IP</code>를 기록하여 <code>${기록된IP}:5555</code>를 <code>sample.py</code>의 adb IP에 입력하세요.</p><p>amdgpu를 사용하는 경우 <code>screencap</code> 명령이 stderr에 정보를 출력하여 이미지 디코딩이 실패할 수 있습니다. <code>adb exec-out screencap | xxd | head</code>를 실행하여 출력에 <code>/vendor/etc/hwdata/amdgpu.ids: No such file...</code>와 같은 텍스트가 있는지 확인하세요. <code>resource/config.json</code> 파일에서 스크린샷 명령을 <code>adb exec-out &#39;screencap 2&gt;/dev/null&#39;</code>로 변경해보세요.</p><h3 id="✅-redroid" tabindex="-1"><a class="header-anchor" href="#✅-redroid"><span>✅ <a href="https://github.com/remote-android/redroid-doc" target="_blank" rel="noopener noreferrer">redroid</a></span></a></h3><p>안드로이드 11 버전 이미지는 게임을 정상적으로 실행합니다. 5555 adb 포트를 공개해야 합니다.</p>',17))])}const m=r(p,[["render",k]]),A=JSON.parse('{"path":"/ko-kr/manual/device/linux.html","title":"Linux 지원","lang":"ko-KR","frontmatter":{"order":3,"icon":"teenyicons:linux-alt-solid","title":"Linux 지원","description":"준비 작업 다음중 하나의 설치 방법을 선택하세요. maa-cli 사용 maa-cli는 Rust로 작성된 간단한 MAA 커맨드 라인 도구입니다. 관련 설치 및 사용 방법은 를 참조하세요. Wine 사용 MAA WPF GUI는 현재 Wine을 통해 실행할 수 있습니다. 설치 단계 .NET 릴리스 페이지에서 Windows...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 지원\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.maa.plus/ko-kr/manual/device/linux.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"Linux 지원"}],["meta",{"property":"og:description","content":"준비 작업 다음중 하나의 설치 방법을 선택하세요. maa-cli 사용 maa-cli는 Rust로 작성된 간단한 MAA 커맨드 라인 도구입니다. 관련 설치 및 사용 방법은 를 참조하세요. Wine 사용 MAA WPF GUI는 현재 Wine을 통해 실행할 수 있습니다. 설치 단계 .NET 릴리스 페이지에서 Windows..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://docs.maa.plus/ja-jp/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://docs.maa.plus/en-us/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://docs.maa.plus/zh-tw/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://docs.maa.plus/zh-cn/manual/device/linux.html"}]]},"readingTime":{"minutes":1.15,"words":346},"git":{"createdTime":1758387926000},"autoDesc":true,"filePathRelative":"ko-kr/manual/device/linux.md","headers":[]}');export{m as comp,A as data};
