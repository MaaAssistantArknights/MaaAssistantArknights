import{_ as i,c as t,e,o as a}from"./app-BqrZ_F5J.js";const n={};function l(h,s){return a(),t("div",null,[...s[0]||(s[0]=[e(`<p>To implement remote control of MAA, you need to provide a service that must be an HTTP(S) service and offer the following two anonymously accessible endpoints. These endpoints must be HTTP(S) web endpoints.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>If the endpoint uses HTTP protocol, MAA will issue a security warning with each connection. <strong>Deploying plaintext transmission services on public internet is highly discouraged and dangerous, for testing purposes only.</strong></p></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Please note that JSON files do not support comments. The comments in this document are for demonstration purposes only. Do not copy them directly.</p></div><h2 id="task-retrieval-endpoint" tabindex="-1"><a class="header-anchor" href="#task-retrieval-endpoint"><span>Task Retrieval Endpoint</span></a></h2><p>MAA continuously polls this endpoint at 1-second intervals, attempting to retrieve tasks to execute and executing them in the order received.</p><p>The endpoint path is arbitrary but must be an HTTP(S) endpoint. For example: <code>https://your-control-host.net/maa/getTask</code></p><p>The controlled MAA must enter this endpoint in the <code>Task Retrieval Endpoint</code> text box in MAA&#39;s configuration.</p><p>This endpoint must accept a POST request with <code>Content-Type=application/json</code> and must accept the following JSON as request content:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;user&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ea6c39eb-a45f-4d82-9ecc-33a7bf2ae4dc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// User identifier entered in MAA settings</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;device&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;f7cd9682-3de9-4eef-9137-ec124ea9e9ec&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         // Device identifier automatically generated by MAA</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // If your endpoint has other uses, you can add optional parameters, but MAA only transmits user and device</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This endpoint must return a JSON-formatted response that meets at least the following format:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;tasks&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:                            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// List of tasks for MAA to execute, currently supported types shown in example, if tasks doesn&#39;t exist connection is considered invalid</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // Sequential execution tasks: these tasks are queued for execution in the order issued</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CaptureImage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Screenshot task, captures current emulator screen and includes as Base64 string in task report payload. If issuing this task type, note your endpoint&#39;s maximum request size limit, as screenshots can be tens of MB, exceeding typical gateway defaults</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;15be4725-5bd3-443d-8ae3-0a5ae789254c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LinkStart&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Start one-click farming</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;15be4725-5bd3-443d-8ae3-0a5ae789254c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LinkStart-Recruiting&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                 </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Immediately execute specific one-click farming sub-function based on current configuration, ignoring main interface checkbox. Optional values detailed below</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Toolbox-GachaOnce&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Toolbox gacha task, optional values: Toolbox-GachaOnce, Toolbox-GachaTenTimes</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Settings-ConnectionAddress&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Configuration modification task, equivalent to ConfigurationHelper.SetValue(&quot;ConnectionAddress&quot;, params); For security, not all settings can be modified, see below for allowed settings</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;params&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                               // Value to modify</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // Immediate execution tasks: these tasks can execute during sequential tasks and MAA guarantees any of these will return results quickly, typically used for controlling the remote control function itself</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CaptureImageNow&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Immediate screenshot task, similar to screenshot task above but executes immediately without waiting for other tasks</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;StopTask&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// &quot;Stop current task&quot; task, attempts to end currently running task. If task list contains other tasks, continues with next task. This task doesn&#39;t wait to confirm current task has stopped before returning, use heartbeat task to confirm stop command effectiveness</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b353c469-b902-4357-bd8f-d133199eea31&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Unique task ID, string type, used when reporting task status</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            &quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HeartBeat&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Heartbeat task, returns immediately with currently executing sequential task&#39;s ID as payload, or empty string if no task executing</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // If your endpoint has other uses, you can add optional return values, but MAA only reads tasks</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These tasks execute in sequence, meaning if you first send a recruitment task followed by a screenshot task, the screenshot will execute after the recruitment task completes. The endpoint should be reentrant and repeatedly return tasks to execute, as MAA automatically tracks task IDs and won&#39;t re-execute tasks with the same ID.</p><div class="hint-container note"><p class="hint-container-title">Note</p><ul><li>LinkStart-[TaskName] task types include LinkStart-Base, LinkStart-WakeUp, LinkStart-Combat, LinkStart-Recruiting, LinkStart-Mall, LinkStart-Mission, LinkStart-AutoRoguelike, LinkStart-Reclamation</li><li>Settings-[SettingsName] task types include Settings-ConnectionAddress, Settings-Stage1</li><li>Settings series tasks still execute sequentially rather than immediately, queuing behind previous tasks</li><li>Multiple immediate execution tasks also execute in issued order, though since these tasks execute quickly, their order generally doesn&#39;t matter</li></ul></div><h2 id="task-reporting-endpoint" tabindex="-1"><a class="header-anchor" href="#task-reporting-endpoint"><span>Task Reporting Endpoint</span></a></h2><p>When MAA completes a task, it reports the execution result to the remote server through this endpoint.</p><p>The endpoint path is arbitrary but must be an HTTP(S) endpoint. For example: <code>https://your-control-host.net/maa/reportStatus</code></p><p>The controlled MAA must enter this endpoint in the <code>Task Reporting Endpoint</code> text box in MAA&#39;s configuration.</p><p>This endpoint must accept a POST request with <code>Content-Type=application/json</code> and must accept the following JSON as request content:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;user&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ea6c39eb-a45f-4d82-9ecc-33a7bf2ae4dc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// User identifier entered in MAA settings</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;device&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;f7cd9682-3de9-4eef-9137-ec124ea9e9ec&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Device identifier automatically generated by MAA</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;task&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;15be4725-5bd3-443d-8ae3-0a5ae789254c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Task ID being reported, corresponding to ID from task retrieval</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;status&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;SUCCESS&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                                     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Task execution result, SUCCESS or FAILED. Generally returns SUCCESS regardless of task execution success, FAILED only in special cases noted in task descriptions</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;payload&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,                                           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Data included in report, string type. Depends on task type, e.g., screenshot task includes Base64 string of screenshot</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // If your endpoint has other uses, you can add optional parameters, but MAA only transmits user and device</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This endpoint&#39;s response content is arbitrary, but if not returning 200 OK, a notification will appear in MAA displaying &quot;Upload failed&quot;</p><h2 id="example-workflow-controlling-maa-with-qq-bot" tabindex="-1"><a class="header-anchor" href="#example-workflow-controlling-maa-with-qq-bot"><span>Example Workflow - Controlling MAA with QQ Bot</span></a></h2><p>Developer A wants to control MAA with their QQ Bot, so they developed a backend exposed on public internet providing two endpoints:</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>https://myqqbot.com/maa/getTask</span></span>
<span class="line"><span>https://myqqbot.com/maa/reportStatus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>For user convenience, their getTask interface returns 200 OK and an empty tasks list regardless of received parameters. Each time they receive a request, they check the database for duplicate devices, and if none found, record the device and user in the database. In this workflow, this interface also serves as user registration.</p><p>They provide a command on their QQ Bot for users to submit deviceId.</p><p>In the QQ Bot&#39;s usage instructions, they tell users to enter their QQ number in MAA&#39;s <code>User Identifier</code> field and send their <code>Device Identifier</code> to the Bot via QQ chat.</p><p>Upon receiving the identifier, the QQ Bot checks the database for corresponding data based on the message&#39;s QQ number, instructing the user to configure MAA if not found.</p><p>Since MAA continuously sends requests once configured, if the user has properly configured MAA, matching records should exist in the database when they submit via QQ.</p><p>The Bot then marks the database record as verified, so future getTask requests with this device and user combination will return actual task lists.</p><p>When users submit commands via QQ Bot, the Bot writes a task to the database, which getTask will return shortly. Additionally, the Bot thoughtfully adds a screenshot task after each user command.</p><p>After executing tasks, MAA calls reportStatus to report results, and the Bot sends QQ messages notifying users and displaying screenshots.</p><h2 id="example-workflow-controlling-maa-with-website" tabindex="-1"><a class="header-anchor" href="#example-workflow-controlling-maa-with-website"><span>Example Workflow - Controlling MAA with Website</span></a></h2><p>Developer B created a website for batch MAA management with their own user management system. Their backend is publicly accessible with two anonymously accessible endpoints:</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>https://mywebsite.com/maa/getTask</span></span>
<span class="line"><span>https://mywebsite.com/maa/reportStatus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>On the website, a MAA instance connection interface displays what Developer B calls a <code>User Key</code> (random string) and has a text box for entering device ID.</p><p>The website instructs users to enter their user key in MAA&#39;s <code>User Identifier</code> field and their <code>Device Identifier</code> on the website.</p><p>Only after successfully creating a MAA connection on the website will getTask return 200 OK; otherwise it returns 401 Unauthorized.</p><p>If users enter incorrect information in MAA and press the test connection button, they&#39;ll receive a connection test failure notification.</p><p>Users can issue tasks on the website, queue tasks, view screenshots, etc., with implementation similar to the QQ Bot example, using getTask and</p>`,39)])])}const o=i(n,[["render",l]]),p=JSON.parse('{"path":"/en-us/protocol/remote-control-schema.html","title":"Remote Control Schema","lang":"en-US","frontmatter":{"order":8,"icon":"mdi:remote-desktop","title":"Remote Control Schema","description":"To implement remote control of MAA, you need to provide a service that must be an HTTP(S) service and offer the following two anonymously accessible endpoints. These endpoints m...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Remote Control Schema\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.maa.plus/en-us/protocol/remote-control-schema.html"}],["meta",{"property":"og:site_name","content":"MaaAssistantArknights"}],["meta",{"property":"og:title","content":"Remote Control Schema"}],["meta",{"property":"og:description","content":"To implement remote control of MAA, you need to provide a service that must be an HTTP(S) service and offer the following two anonymously accessible endpoints. These endpoints m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://docs.maa.plus/ko-kr/protocol/remote-control-schema.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://docs.maa.plus/ja-jp/protocol/remote-control-schema.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://docs.maa.plus/zh-tw/protocol/remote-control-schema.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://docs.maa.plus/zh-cn/protocol/remote-control-schema.html"}]]},"readingTime":{"minutes":4.7,"words":1410},"git":{"createdTime":1758189309000},"autoDesc":true,"filePathRelative":"en-us/protocol/remote-control-schema.md","headers":[]}');export{o as comp,p as data};
