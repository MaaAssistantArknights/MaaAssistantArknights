import{_ as r,c as d,d as i,b as n,e,a as t,w as l,r as o,o as h}from"./app-BVnd_KPh.js";const p={},k={class:"hint-container tip"};function c(g,a){const s=o("VPLink");return h(),d("div",null,[a[15]||(a[15]=i("h2",{id:"準備工作",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#準備工作"},[i("span",null,"準備工作")])],-1)),a[16]||(a[16]=i("p",null,"以下安裝方式任選其一即可：",-1)),a[17]||(a[17]=i("h3",{id:"使用-maa-cli",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#使用-maa-cli"},[i("span",null,"使用 maa-cli")])],-1)),i("p",null,[a[1]||(a[1]=i("a",{href:"https://github.com/MaaAssistantArknights/maa-cli",target:"_blank",rel:"noopener noreferrer"},"maa-cli",-1)),a[2]||(a[2]=e(" 是一個使用 Rust 編寫的簡單 MAA 命令列工具。相關安裝與使用教程請閱讀",-1)),t(s,{href:"../cli"},{default:l(()=>[...a[0]||(a[0]=[e("CLI 使用指南",-1)])]),_:1}),a[3]||(a[3]=e("。",-1))]),a[18]||(a[18]=n('<h3 id="使用-python" tabindex="-1"><a class="header-anchor" href="#使用-python"><span>使用 Python</span></a></h3><h4 id="_1-安裝-maa-動態庫" tabindex="-1"><a class="header-anchor" href="#_1-安裝-maa-動態庫"><span>1. 安裝 MAA 動態庫</span></a></h4><ol><li><p>在 <a href="https://maa.plus/" target="_blank" rel="noopener noreferrer">MAA 官網</a> 下載 Linux 動態庫並解壓，或從軟體源安裝：</p><ul><li>AUR：<a href="https://aur.archlinux.org/packages/maa-assistant-arknights" target="_blank" rel="noopener noreferrer">maa-assistant-arknights</a>，按照安裝後的提示編輯檔案</li><li>Nixpkgs: <a href="https://github.com/NixOS/nixpkgs/blob/nixos-unstable/pkgs/by-name/ma/maa-assistant-arknights/package.nix" target="_blank" rel="noopener noreferrer">maa-assistant-arknights</a></li></ul></li><li><p>進入 <code>./MAA-v{版本號}-linux-{架構}/Python/</code> 目錄下打開 <code>sample.py</code> 文件</p></li></ol>',3)),i("div",k,[a[7]||(a[7]=i("p",{class:"hint-container-title"},"提示",-1)),i("p",null,[a[5]||(a[5]=e("預編譯的版本包含在相對較新的 Linux 發行版 (Ubuntu 22.04) 中編譯的動態庫，如果您系統中的 libstdc++ 版本較老，可能遇到 ABI 不兼容的問題 可以參考 ",-1)),t(s,{href:"../../develop/linux-tutorial.md"},{default:l(()=>[...a[4]||(a[4]=[e("Linux編譯教學",-1)])]),_:1}),a[6]||(a[6]=e(" 重新編譯或使用容器執行",-1))])]),a[19]||(a[19]=n(`<h4 id="_2-adb-配置" tabindex="-1"><a class="header-anchor" href="#_2-adb-配置"><span>2. <code>adb</code> 配置</span></a></h4><ol><li><p>找到 <a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L48" target="_blank" rel="noopener noreferrer"><code>if asst.connect(&#39;adb.exe&#39;, &#39;127.0.0.1:5554&#39;):</code></a> 一欄</p></li><li><p><code>adb</code> 工具調用</p><ul><li>如果模擬器使用 <code>Android Studio</code> 的 <code>avd</code> ，其內建 <code>adb</code> 。可以直接在 <code>adb.exe</code> 一欄填寫 <code>adb</code> 路徑，一般在 <code>$HOME/Android/Sdk/platform-tools/</code> 裡面可以找到，例如：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asst.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/home/foo/Android/Sdk/platform-tools/adb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;模擬器的 adb 地址&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>如果使用其他模擬器須先下載 <code>adb</code> ： <code>$ sudo apt install adb</code> 後填寫路徑或利用 <code>PATH</code> 環境變量直接填寫 <code>adb</code> 即可</li></ul></li><li><p>模擬器 <code>adb</code> 路徑獲取</p><ul><li>可以直接使用 adb 工具： <code>$ adb路徑 devices</code> ，例如：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/foo/Android/Sdk/platform-tools/adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devices</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">List</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> devices</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> attached</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">emulator-5554</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> device</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>返回的 <code>emulator-5554</code> 就是模擬器的 adb 地址，覆蓋掉 <code>127.0.0.1:5555</code> ，例如：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asst.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/home/foo/Android/Sdk/platform-tools/adb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;emulator-5554&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>這時候可以測試下： <code>$ python3 sample.py</code> ，如果返回 <code>連接成功</code> 則基本成功了</p></li></ol><h4 id="_3-任務配置" tabindex="-1"><a class="header-anchor" href="#_3-任務配置"><span>3. 任務配置</span></a></h4>`,3)),i("p",null,[a[9]||(a[9]=e("自定義任務： 根據需要參考 ",-1)),t(s,{href:"../../protocol/integration.md"},{default:l(()=>[...a[8]||(a[8]=[e("集成文件",-1)])]),_:1}),a[10]||(a[10]=e(" 對 ",-1)),a[11]||(a[11]=i("code",null,"sample.py",-1)),a[12]||(a[12]=e(" 的 ",-1)),a[13]||(a[13]=i("a",{href:"https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/722f0ddd4765715199a5dc90ea1bec2940322344/src/Python/sample.py#L54",target:"_blank",rel:"noopener noreferrer"},[i("code",null,"# 任務及參數請參考 docs/集成文件.md")],-1)),a[14]||(a[14]=e(" 一欄進行修改",-1))]),a[20]||(a[20]=n('<h2 id="模擬器支援" tabindex="-1"><a class="header-anchor" href="#模擬器支援"><span>模擬器支援</span></a></h2><h3 id="✅-avd" tabindex="-1"><a class="header-anchor" href="#✅-avd"><span>✅ <a href="https://developer.android.com/studio/run/managing-avds" target="_blank" rel="noopener noreferrer">AVD</a></span></a></h3><p>必選配置： 16:9 的螢幕解析度，且解析度需大於 720p</p><p>推薦配置： x86_64 的框架 (R - 30 - x86_64 - Android 11.0) 配合 MAA 的 Linux x64 動態庫</p><h3 id="⚠️-genymotion" tabindex="-1"><a class="header-anchor" href="#⚠️-genymotion"><span>⚠️ <a href="https://www.genymotion.com/" target="_blank" rel="noopener noreferrer">Genymotion</a></span></a></h3><p>高版本安卓內建 x86_64 框架，輕量但是執行明日方舟時易閃退</p><p>暫未嚴格測試， adb 功能和路徑獲取沒有問題</p><h2 id="容器化安卓的支援" tabindex="-1"><a class="header-anchor" href="#容器化安卓的支援"><span>容器化安卓的支援</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>以下方案通常對核心模組有一定要求，請根據具體方案和發行版安裝合適的核心模組</p></div><h3 id="✅-waydroid" tabindex="-1"><a class="header-anchor" href="#✅-waydroid"><span>✅ <a href="https://waydro.id/" target="_blank" rel="noopener noreferrer">Waydroid</a></span></a></h3><p>安裝後需要重新設定解析度（或者大於 720P 且為 16:9 的解析度，然後重新啟動）：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">waydroid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> persist.waydroid.width</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1280</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">waydroid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> persist.waydroid.height</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 720</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>設定 adb 的 IP 地址：打開 <code>設定</code> - <code>關於</code> - <code>IP 地址</code> ，記錄第一個 <code>IP</code> ，將 <code>${記錄的 IP}:5555</code> 填入<code>sample.py</code> 的 adb IP 一欄。</p><h3 id="✅-redroid" tabindex="-1"><a class="header-anchor" href="#✅-redroid"><span>✅ <a href="https://github.com/remote-android/redroid-doc" target="_blank" rel="noopener noreferrer">redroid</a></span></a></h3><p>安卓 11 版本的鏡像可正常執行遊戲，需要暴露 5555 adb 通訊埠.</p>',15))])}const m=r(p,[["render",c]]),A=JSON.parse('{"path":"/zh-tw/manual/device/linux.html","title":"Linux 模擬器與容器","lang":"zh-TW","frontmatter":{"order":3,"icon":"teenyicons:linux-alt-solid","title":"Linux 模擬器與容器","description":"準備工作 以下安裝方式任選其一即可： 使用 maa-cli maa-cli 是一個使用 Rust 編寫的簡單 MAA 命令列工具。相關安裝與使用教程請閱讀。 使用 Python 1. 安裝 MAA 動態庫 在 MAA 官網 下載 Linux 動態庫並解壓，或從軟體源安裝： AUR：maa-assistant-arknights，按照安裝後的提示編輯檔案...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 模擬器與容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.maa.plus/zh-tw/manual/device/linux.html"}],["meta",{"property":"og:site_name","content":"MAA 文件站"}],["meta",{"property":"og:title","content":"Linux 模擬器與容器"}],["meta",{"property":"og:description","content":"準備工作 以下安裝方式任選其一即可： 使用 maa-cli maa-cli 是一個使用 Rust 編寫的簡單 MAA 命令列工具。相關安裝與使用教程請閱讀。 使用 Python 1. 安裝 MAA 動態庫 在 MAA 官網 下載 Linux 動態庫並解壓，或從軟體源安裝： AUR：maa-assistant-arknights，按照安裝後的提示編輯檔案..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://docs.maa.plus/ko-kr/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://docs.maa.plus/ja-jp/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://docs.maa.plus/en-us/manual/device/linux.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://docs.maa.plus/zh-cn/manual/device/linux.html"}]]},"readingTime":{"minutes":2.44,"words":731},"git":{"createdTime":1759592694000},"autoDesc":true,"filePathRelative":"zh-tw/manual/device/linux.md","headers":[]}');export{m as comp,A as data};
