import{_ as d,c as r,e as a,a as i,d as n,w as t,b as e,r as o,o as p}from"./app-C9soqA16.js";const u={},k={class:"vp-field-group"},h={class:"vp-field-group"},c={class:"vp-field-group"},g={class:"vp-field-group"},y={class:"vp-field-group"},b={class:"vp-field-group"},A={class:"vp-field-group"},m={class:"vp-field-group"},f={class:"vp-field-group"},v={class:"vp-field-group"},q={class:"vp-field-group"},C={class:"vp-field-group"},D={class:"vp-field-group"},E={class:"vp-field-group"},B={class:"vp-field-group"},F={class:"vp-field-group"},T={class:"vp-field-group"},S={class:"vp-field-group"},x={class:"vp-field-group"};function I(R,l){const s=o("VPField");return p(),r("div",null,[l[70]||(l[70]=a(`<div class="hint-container info"><p class="hint-container-title">注意</p><p>回调消息随版本更新飞速迭代中，本文档可能过时。如需获取最新内容可参考 <a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/dev/src/MaaWpfGui/Main/AsstProxy.cs" target="_blank" rel="noopener noreferrer">C# 集成源码</a></p></div><h2 id="回调函数原型" tabindex="-1"><a class="header-anchor" href="#回调函数原型"><span>回调函数原型</span></a></h2><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">typedef</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ASST_CALL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> AsstCallback)(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> details, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> custom_arg);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="参数总览" tabindex="-1"><a class="header-anchor" href="#参数总览"><span>参数总览</span></a></h2><ul><li><p><code>int msg</code><br> 消息类型</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> AsstMsg</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* Global Info */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    InternalError</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 内部错误</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    InitFailed</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 初始化失败</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ConnectionInfo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 连接相关信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    AllTasksCompleted</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 全部任务完成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    AsyncCallInfo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 外部异步调用信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    Destroyed</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">         =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           // 实例已销毁</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* TaskChain Info */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TaskChainError</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 任务链执行/识别错误</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TaskChainStart</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 任务链开始</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TaskChainCompleted</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 任务链完成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TaskChainExtraInfo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 任务链额外信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TaskChainStopped</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10004</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 任务链手动停止</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* SubTask Info */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    SubTaskError</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 原子任务执行/识别错误</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    SubTaskStart</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 原子任务开始</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    SubTaskCompleted</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 原子任务完成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    SubTaskExtraInfo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 原子任务额外信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    SubTaskStopped</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20004</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 原子任务手动停止</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* Web Request */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ReportRequest</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">     =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       // 上报请求</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>const char* details</code><br> 消息详情，json 字符串，详见 <a href="#%E5%AD%97%E6%AE%B5%E8%A7%A3%E9%87%8A">字段解释</a></p></li><li><p><code>void* custom_arg</code><br> 调用方自定义参数，会原样传出 <code>AsstCreateEx</code> 接口中的 <code>custom_arg</code> 参数，C 系语言可利用该参数传出 <code>this</code> 指针</p></li></ul><h2 id="字段解释" tabindex="-1"><a class="header-anchor" href="#字段解释"><span>字段解释</span></a></h2><h3 id="internalerror" tabindex="-1"><a class="header-anchor" href="#internalerror"><span>InternalError</span></a></h3><p><code>details</code> 字段为空。</p><h3 id="initfailed" tabindex="-1"><a class="header-anchor" href="#initfailed"><span>InitFailed</span></a></h3>`,9)),i("div",k,[n(s,{name:"what",required:"",type:"string"},{default:t(()=>[...l[0]||(l[0]=[i("p",null,"错误类型。",-1)])]),_:1}),n(s,{name:"why",required:"",type:"string"},{default:t(()=>[...l[1]||(l[1]=[i("p",null,"错误原因。",-1)])]),_:1}),n(s,{name:"details",required:"",type:"object"},{default:t(()=>[...l[2]||(l[2]=[i("p",null,"错误详情。",-1)])]),_:1})]),l[71]||(l[71]=i("h3",{id:"connectioninfo",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#connectioninfo"},[i("span",null,"ConnectionInfo")])],-1)),i("div",h,[n(s,{name:"what",required:"",type:"string"},{default:t(()=>[...l[3]||(l[3]=[i("p",null,"信息类型。",-1)])]),_:1}),n(s,{name:"why",required:"",type:"string"},{default:t(()=>[...l[4]||(l[4]=[i("p",null,"信息原因。",-1)])]),_:1}),n(s,{name:"uuid",type:"string"},{default:t(()=>[...l[5]||(l[5]=[i("p",null,"设备唯一码（连接失败时为空）。",-1)])]),_:1}),n(s,{name:"details",required:"",type:"object"},{default:t(()=>[...l[6]||(l[6]=[i("p",null,"连接详情。其结构如下：",-1),i("ul",null,[i("li",null,[i("code",null,"adb"),e(" (string, required): "),i("code",null,"AsstConnect"),e(" 接口 "),i("code",null,"adb_path"),e(" 参数。")]),i("li",null,[i("code",null,"address"),e(" (string, required): "),i("code",null,"AsstConnect"),e(" 接口 "),i("code",null,"address"),e(" 参数。")]),i("li",null,[i("code",null,"config"),e(" (string, required): "),i("code",null,"AsstConnect"),e(" 接口 "),i("code",null,"config"),e(" 参数。")])],-1)])]),_:1})]),l[72]||(l[72]=a('<h3 id="常见-what-字段" tabindex="-1"><a class="header-anchor" href="#常见-what-字段"><span>常见 <code>What</code> 字段</span></a></h3><ul><li><code>ConnectFailed</code><br> 连接失败</li><li><code>Connected</code><br> 已连接，注意此时的 <code>uuid</code> 字段值为空（下一步才是获取）</li><li><code>UuidGot</code><br> 已获取到设备唯一码</li><li><code>UnsupportedResolution</code><br> 分辨率不被支持</li><li><code>ResolutionError</code><br> 分辨率获取错误</li><li><code>Reconnecting</code><br> 连接断开（adb / 模拟器 炸了），正在重连</li><li><code>Reconnected</code><br> 连接断开（adb / 模拟器 炸了），重连成功</li><li><code>Disconnect</code><br> 连接断开（adb / 模拟器 炸了），并重试失败</li><li><code>ScreencapFailed</code><br> 截图失败（adb / 模拟器 炸了），并重试失败</li><li><code>TouchModeNotAvailable</code><br> 不支持的触控模式</li></ul><h3 id="asynccallinfo" tabindex="-1"><a class="header-anchor" href="#asynccallinfo"><span>AsyncCallInfo</span></a></h3>',3)),i("div",c,[n(s,{name:"uuid",required:"",type:"string"},{default:t(()=>[...l[7]||(l[7]=[i("p",null,"设备唯一码。",-1)])]),_:1}),n(s,{name:"what",required:"",type:"string"},{default:t(()=>[...l[8]||(l[8]=[i("p",null,[e("回调类型，例如 "),i("code",null,"Connect"),e(" | "),i("code",null,"Click"),e(" | "),i("code",null,"Screencap"),e(" 等。")],-1)])]),_:1}),n(s,{name:"async_call_id",required:"",type:"number"},{default:t(()=>[...l[9]||(l[9]=[i("p",null,[e("异步请求 id，即调用 "),i("code",null,"AsstAsyncXXX"),e(" 时的返回值。")],-1)])]),_:1}),n(s,{name:"details",required:"",type:"object"},{default:t(()=>[...l[10]||(l[10]=[i("p",null,"异步调用详情。其结构如下：",-1),i("ul",null,[i("li",null,[i("code",null,"ret"),e(" (boolean, required): 实际调用的返回值。")]),i("li",null,[i("code",null,"cost"),e(" (number, required): 耗时，单位毫秒。")])],-1)])]),_:1})]),l[73]||(l[73]=i("h3",{id:"alltaskscompleted",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#alltaskscompleted"},[i("span",null,"AllTasksCompleted")])],-1)),i("div",g,[n(s,{name:"taskchain",required:"",type:"string"},{default:t(()=>[...l[11]||(l[11]=[i("p",null,"最后的任务链。",-1)])]),_:1}),n(s,{name:"uuid",required:"",type:"string"},{default:t(()=>[...l[12]||(l[12]=[i("p",null,"设备唯一码。",-1)])]),_:1}),n(s,{name:"finished_tasks",required:"",type:"array<number>"},{default:t(()=>[...l[13]||(l[13]=[i("p",null,"已经运行过的任务 id 列表。",-1)])]),_:1})]),l[74]||(l[74]=a('<h4 id="常见-taskchain-字段" tabindex="-1"><a class="header-anchor" href="#常见-taskchain-字段"><span>常见 <code>taskchain</code> 字段</span></a></h4><ul><li><code>StartUp</code><br> 开始唤醒</li><li><code>CloseDown</code><br> 关闭游戏</li><li><code>Fight</code><br> 刷理智</li><li><code>Mall</code><br> 信用点及购物</li><li><code>Recruit</code><br> 自动公招</li><li><code>Infrast</code><br> 基建换班</li><li><code>Award</code><br> 领取日常奖励</li><li><code>Roguelike</code><br> 无限刷肉鸽</li><li><code>Copilot</code><br> 自动抄作业</li><li><code>SSSCopilot</code><br> 自动抄保全作业</li><li><code>Depot</code><br> 仓库识别</li><li><code>OperBox</code><br> 干员 box 识别</li><li><code>Reclamation</code><br> 生息演算</li><li><code>Custom</code><br> 自定义任务</li><li><code>SingleStep</code><br> 单步任务</li><li><code>VideoRecognition</code><br> 视频识别任务</li><li><code>Debug</code><br> 调试</li></ul><h3 id="taskchain-相关消息" tabindex="-1"><a class="header-anchor" href="#taskchain-相关消息"><span>TaskChain 相关消息</span></a></h3>',3)),i("div",y,[n(s,{name:"taskchain",required:"",type:"string"},{default:t(()=>[...l[14]||(l[14]=[i("p",null,"当前的任务链。",-1)])]),_:1}),n(s,{name:"taskid",required:"",type:"number"},{default:t(()=>[...l[15]||(l[15]=[i("p",null,"当前任务 TaskId。",-1)])]),_:1}),n(s,{name:"uuid",required:"",type:"string"},{default:t(()=>[...l[16]||(l[16]=[i("p",null,"设备唯一码。",-1)])]),_:1})]),l[75]||(l[75]=i("h3",{id:"taskchainextrainfo",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#taskchainextrainfo"},[i("span",null,"TaskChainExtraInfo")])],-1)),l[76]||(l[76]=i("p",null,[i("code",null,"details"),e(" 字段为空。")],-1)),l[77]||(l[77]=i("h3",{id:"subtask-相关消息",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#subtask-相关消息"},[i("span",null,"SubTask 相关消息")])],-1)),i("div",b,[n(s,{name:"subtask",required:"",type:"string"},{default:t(()=>[...l[17]||(l[17]=[i("p",null,"子任务名。",-1)])]),_:1}),n(s,{name:"class",required:"",type:"string"},{default:t(()=>[...l[18]||(l[18]=[i("p",null,"子任务符号名。",-1)])]),_:1}),n(s,{name:"taskchain",required:"",type:"string"},{default:t(()=>[...l[19]||(l[19]=[i("p",null,"当前任务链。",-1)])]),_:1}),n(s,{name:"taskid",required:"",type:"number"},{default:t(()=>[...l[20]||(l[20]=[i("p",null,"当前任务 TaskId。",-1)])]),_:1}),n(s,{name:"details",required:"",type:"object"},{default:t(()=>[...l[21]||(l[21]=[i("p",null,"详情。",-1)])]),_:1}),n(s,{name:"uuid",required:"",type:"string"},{default:t(()=>[...l[22]||(l[22]=[i("p",null,"设备唯一码。",-1)])]),_:1})]),l[78]||(l[78]=i("h4",{id:"常见-subtask-字段",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#常见-subtask-字段"},[i("span",null,[e("常见 "),i("code",null,"subtask"),e(" 字段")])])],-1)),i("ul",null,[i("li",null,[l[28]||(l[28]=i("p",null,[i("code",null,"ProcessTask"),i("br"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",A,[n(s,{name:"task",required:"",type:"string"},{default:t(()=>[...l[23]||(l[23]=[i("p",null,"任务名。",-1)])]),_:1}),n(s,{name:"action",required:"",type:"number"},{default:t(()=>[...l[24]||(l[24]=[i("p",null,"Action ID。",-1)])]),_:1}),n(s,{name:"exec_times",required:"",type:"number"},{default:t(()=>[...l[25]||(l[25]=[i("p",null,"已执行次数。",-1)])]),_:1}),n(s,{name:"max_times",required:"",type:"number"},{default:t(()=>[...l[26]||(l[26]=[i("p",null,"最大执行次数。",-1)])]),_:1}),n(s,{name:"algorithm",required:"",type:"number"},{default:t(()=>[...l[27]||(l[27]=[i("p",null,"识别算法。",-1)])]),_:1})])]),l[29]||(l[29]=i("li",null,[i("p",null,"Todo 其他")],-1))]),l[79]||(l[79]=a('<h5 id="常见-task-字段" tabindex="-1"><a class="header-anchor" href="#常见-task-字段"><span>常见 <code>task</code> 字段</span></a></h5><ul><li><code>StartButton2</code><br> 开始战斗</li><li><code>MedicineConfirm</code><br> 使用理智药</li><li><code>ExpiringMedicineConfirm</code><br> 使用 48 小时内过期的理智药</li><li><code>StoneConfirm</code><br> 碎石</li><li><code>RecruitRefreshConfirm</code><br> 公招刷新标签</li><li><code>RecruitConfirm</code><br> 公招确认招募</li><li><code>RecruitNowConfirm</code><br> 公招使用加急许可</li><li><code>ReportToPenguinStats</code><br> 汇报到企鹅数据统计</li><li><code>ReportToYituliu</code><br> 汇报到一图流大数据</li><li><code>InfrastDormDoubleConfirmButton</code><br> 基建宿舍的二次确认按钮，仅当干员冲突时才会有，请提示用户</li><li><code>StartExplore</code><br> 肉鸽开始探索</li><li><code>StageTraderInvestConfirm</code><br> 肉鸽投资了源石锭</li><li><code>StageTraderInvestSystemFull</code><br> 肉鸽投资达到了游戏上限</li><li><code>ExitThenAbandon</code><br> 肉鸽放弃了本次探索</li><li><code>MissionCompletedFlag</code><br> 肉鸽战斗完成</li><li><code>MissionFailedFlag</code><br> 肉鸽战斗失败</li><li><code>StageTraderEnter</code><br> 肉鸽关卡：诡异行商</li><li><code>StageSafeHouseEnter</code><br> 肉鸽关卡：安全的角落</li><li><code>StageEncounterEnter</code><br> 肉鸽关卡：不期而遇/古堡馈赠</li><li><code>StageCombatDpsEnter</code><br> 肉鸽关卡：普通作战</li><li><code>StageEmergencyDps</code><br> 肉鸽关卡：紧急作战</li><li><code>StageDreadfulFoe</code><br> 肉鸽关卡：险路恶敌</li><li><code>StartGameTask</code> 打开客户端失败（配置文件与传入 client_type 不匹配）</li><li>Todo 其他</li></ul><h3 id="subtaskextrainfo" tabindex="-1"><a class="header-anchor" href="#subtaskextrainfo"><span>SubTaskExtraInfo</span></a></h3>',3)),i("div",m,[n(s,{name:"taskchain",required:"",type:"string"},{default:t(()=>[...l[30]||(l[30]=[i("p",null,"当前任务链。",-1)])]),_:1}),n(s,{name:"class",required:"",type:"string"},{default:t(()=>[...l[31]||(l[31]=[i("p",null,"子任务类型。",-1)])]),_:1}),n(s,{name:"what",required:"",type:"string"},{default:t(()=>[...l[32]||(l[32]=[i("p",null,"信息类型。",-1)])]),_:1}),n(s,{name:"details",required:"",type:"object"},{default:t(()=>[...l[33]||(l[33]=[i("p",null,"信息详情。",-1)])]),_:1}),n(s,{name:"uuid",required:"",type:"string"},{default:t(()=>[...l[34]||(l[34]=[i("p",null,"设备唯一码。",-1)])]),_:1})]),l[80]||(l[80]=i("h4",{id:"常见-what-及-details-字段",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#常见-what-及-details-字段"},[i("span",null,[e("常见 "),i("code",null,"what"),e(" 及 "),i("code",null,"details"),e(" 字段")])])],-1)),i("ul",null,[l[60]||(l[60]=a("<li><p><code>StageDrops</code><br> 关卡材料掉落信息。<code>details</code> 字段结构如下：</p><ul><li><code>drops</code> (array, required): 本次识别到的掉落材料，数组每一项包含： <ul><li><code>itemId</code> (string, required): 材料 ID。</li><li><code>quantity</code> (number, required): 掉落数量。</li><li><code>itemName</code> (string, required): 材料名称。</li></ul></li><li><code>stage</code> (object, required): 关卡信息，包含： <ul><li><code>stageCode</code> (string, required): 关卡编号。</li><li><code>stageId</code> (string, required): 关卡 ID。</li></ul></li><li><code>stars</code> (number, required): 行动结束星级。</li><li><code>stats</code> (array, required): 本次执行期间总的材料掉落，数组每一项包含： <ul><li><code>itemId</code> (string, required): 材料 ID。</li><li><code>itemName</code> (string, required): 材料名称。</li><li><code>quantity</code> (number, required): 总计数量。</li><li><code>addQuantity</code> (number, required): 本次新增的掉落数量。</li></ul></li></ul></li>",1)),i("li",null,[l[36]||(l[36]=i("p",null,[i("code",null,"RecruitTagsDetected"),i("br"),e(" 公招识别到了 Tags。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",f,[n(s,{name:"tags",required:"",type:"array<string>"},{default:t(()=>[...l[35]||(l[35]=[i("p",null,"识别到的 Tag 列表。",-1)])]),_:1})])]),i("li",null,[l[38]||(l[38]=i("p",null,[i("code",null,"RecruitSpecialTag"),i("br"),e(" 公招识别到了特殊 Tag。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",v,[n(s,{name:"tag",required:"",type:"string"},{default:t(()=>[...l[37]||(l[37]=[i("p",null,[e("特殊 Tag 名称，例如 "),i("code",null,"高级资深干员"),e("。")],-1)])]),_:1})])]),l[61]||(l[61]=a("<li><p><code>RecruitResult</code><br> 公招识别结果。<code>details</code> 字段结构如下：</p><ul><li><code>tags</code> (array, required): 所有识别到的 tags，目前固定为 5 个。</li><li><code>level</code> (number, required): 组合的最高星级。</li><li><code>result</code> (array, required): 具体的组合结果，数组每一项包含： <ul><li><code>tags</code> (array, required): 参与组合的 tags。</li><li><code>level</code> (number, required): 这组 tags 的星级。</li><li><code>opers</code> (array, required): 可能招募到的干员，数组每一项包含： <ul><li><code>name</code> (string, required): 干员名称。</li><li><code>level</code> (number, required): 干员星级。</li></ul></li></ul></li></ul></li>",1)),i("li",null,[l[41]||(l[41]=i("p",null,[i("code",null,"RecruitTagsRefreshed"),i("br"),e(" 公招刷新了 Tags。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",q,[n(s,{name:"count",required:"",type:"number"},{default:t(()=>[...l[39]||(l[39]=[i("p",null,"当前槽位已刷新次数。",-1)])]),_:1}),n(s,{name:"refresh_limit",required:"",type:"number"},{default:t(()=>[...l[40]||(l[40]=[i("p",null,"当前槽位刷新次数上限。",-1)])]),_:1})])]),i("li",null,[l[43]||(l[43]=i("p",null,[i("code",null,"RecruitNoPermit"),i("br"),e(" 公招无招聘许可。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",C,[n(s,{name:"continue",required:"",type:"boolean"},{default:t(()=>[...l[42]||(l[42]=[i("p",null,"是否继续刷新。",-1)])]),_:1})])]),i("li",null,[l[45]||(l[45]=i("p",null,[i("code",null,"RecruitTagsSelected"),i("br"),e(" 公招选择了 Tags。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",D,[n(s,{name:"tags",required:"",type:"array<string>"},{default:t(()=>[...l[44]||(l[44]=[i("p",null,"选择的 Tag 列表。",-1)])]),_:1})])]),l[62]||(l[62]=i("li",null,[i("p",null,[i("code",null,"RecruitSlotCompleted"),i("br"),e(" 当前公招槽位任务完成。"),i("code",null,"details"),e(" 字段为空。")])],-1)),l[63]||(l[63]=i("li",null,[i("p",null,[i("code",null,"RecruitError"),i("br"),e(" 公招识别错误。"),i("code",null,"details"),e(" 字段为空。")])],-1)),i("li",null,[l[48]||(l[48]=i("p",null,[i("code",null,"EnterFacility"),i("br"),e(" 基建进入了设施。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",E,[n(s,{name:"facility",required:"",type:"string"},{default:t(()=>[...l[46]||(l[46]=[i("p",null,"设施名。",-1)])]),_:1}),n(s,{name:"index",required:"",type:"number"},{default:t(()=>[...l[47]||(l[47]=[i("p",null,"设施序号。",-1)])]),_:1})])]),i("li",null,[l[51]||(l[51]=i("p",null,[i("code",null,"NotEnoughStaff"),i("br"),e(" 基建可用干员不足。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",B,[n(s,{name:"facility",required:"",type:"string"},{default:t(()=>[...l[49]||(l[49]=[i("p",null,"设施名。",-1)])]),_:1}),n(s,{name:"index",required:"",type:"number"},{default:t(()=>[...l[50]||(l[50]=[i("p",null,"设施序号。",-1)])]),_:1})])]),i("li",null,[l[55]||(l[55]=i("p",null,[i("code",null,"ProductOfFacility"),i("br"),e(" 基建产物。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",F,[n(s,{name:"product",required:"",type:"string"},{default:t(()=>[...l[52]||(l[52]=[i("p",null,"产物名。",-1)])]),_:1}),n(s,{name:"facility",required:"",type:"string"},{default:t(()=>[...l[53]||(l[53]=[i("p",null,"设施名。",-1)])]),_:1}),n(s,{name:"index",required:"",type:"number"},{default:t(()=>[...l[54]||(l[54]=[i("p",null,"设施序号。",-1)])]),_:1})])]),i("li",null,[l[57]||(l[57]=i("p",null,[i("code",null,"StageInfo"),i("br"),e(" 自动作战关卡信息。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",T,[n(s,{name:"name",required:"",type:"string"},{default:t(()=>[...l[56]||(l[56]=[i("p",null,"关卡名。",-1)])]),_:1})])]),l[64]||(l[64]=i("li",null,[i("p",null,[i("code",null,"StageInfoError"),i("br"),e(" 自动作战关卡识别错误。"),i("code",null,"details"),e(" 字段为空。")])],-1)),i("li",null,[l[59]||(l[59]=i("p",null,[i("code",null,"PenguinId"),i("br"),e(" 企鹅物流 ID。"),i("code",null,"details"),e(" 字段内容如下：")],-1)),i("div",S,[n(s,{name:"id",required:"",type:"string"},{default:t(()=>[...l[58]||(l[58]=[i("p",null,"企鹅物流 ID。",-1)])]),_:1})])]),l[65]||(l[65]=a('<li><p><code>Depot</code><br> 仓库识别结果。<code>details</code> 字段结构如下：</p><ul><li><code>done</code> (boolean, required): 是否已经识别完了，为 <code>false</code> 表示仍在识别中（过程中的数据）。</li><li><code>arkplanner</code> (object, required): <a href="https://penguin-stats.cn/planner" target="_blank" rel="noopener noreferrer">ArkPlanner</a> 格式的数据。</li><li><code>lolicon</code> (object, required): <a href="https://arkntools.app/#/material" target="_blank" rel="noopener noreferrer">lolicon</a> (Arkntools) 格式的数据。</li></ul></li><li><p><code>OperBox</code><br> 干员识别结果。<code>details</code> 字段结构如下：</p><ul><li><code>done</code> (boolean, required): 是否已经识别完了，为 <code>false</code> 表示仍在识别中（过程中的数据）。</li><li><code>all_oper</code> (array, required): 全干员列表，数组每一项包含： <ul><li><code>id</code> (string, required): 干员 ID。</li><li><code>name</code> (string, required): 干员名称。</li><li><code>own</code> (boolean, required): 是否拥有。</li><li><code>rarity</code> (number, required): 干员稀有度 [1, 6]。</li></ul></li><li><code>own_opers</code> (array, required): 已拥有干员的详细信息列表，数组每一项包含： <ul><li><code>id</code> (string, required): 干员 ID。</li><li><code>name</code> (string, required): 干员名称。</li><li><code>own</code> (boolean, required): 是否拥有。</li><li><code>elite</code> (number, required): 精英等级 [0, 2]。</li><li><code>level</code> (number, required): 干员等级。</li><li><code>potential</code> (number, required): 干员潜能 [1, 6]。</li><li><code>rarity</code> (number, required): 干员稀有度 [1, 6]。</li></ul></li></ul></li><li><p><code>UnsupportedLevel</code><br> 自动抄作业，不支持的关卡名。<code>details</code> 字段为空。</p></li>',3))]),l[81]||(l[81]=i("h3",{id:"reportrequest",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#reportrequest"},[i("span",null,"ReportRequest")])],-1)),l[82]||(l[82]=i("p",null,"该字段主要用于核心模块向 UI 层传递网络请求信息，UI 负责执行具体的 HTTP 上报操作。",-1)),i("div",x,[n(s,{name:"url",required:"",type:"string"},{default:t(()=>[...l[66]||(l[66]=[i("p",null,[e("请求的完整 URL，例如 "),i("code",null,"https://penguin-stats.io/PenguinStats/api/v2/report"),e("。")],-1)])]),_:1}),n(s,{name:"headers",required:"",type:"object"},{default:t(()=>[...l[67]||(l[67]=[i("p",null,[e("请求头键值对（不包含 "),i("code",null,"Content-Type"),e("，UI 层自行添加）。")],-1)])]),_:1}),n(s,{name:"body",required:"",type:"string"},{default:t(()=>[...l[68]||(l[68]=[i("p",null,"请求体内容（通常是 JSON 格式的字符串）。",-1)])]),_:1}),n(s,{name:"subtask",required:"",type:"string"},{default:t(()=>[...l[69]||(l[69]=[i("p",null,[e("子任务名称，标识具体上报任务，如 "),i("code",null,"ReportToPenguinStats"),e("、"),i("code",null,"ReportToYituliu"),e("。")],-1)])]),_:1})])])}const j=d(u,[["render",I]]),N=JSON.parse('{"path":"/zh-cn/protocol/callback-schema.html","title":"回调消息协议","lang":"zh-CN","frontmatter":{"order":2,"icon":"material-symbols:u-turn-left","title":"回调消息协议","description":"注意 回调消息随版本更新飞速迭代中，本文档可能过时。如需获取最新内容可参考 C# 集成源码 回调函数原型 参数总览 int msg 消息类型 const char* details 消息详情，json 字符串，详见 字段解释 void* custom_arg 调用方自定义参数，会原样传出 AsstCreateEx 接口中的 custom_arg 参数，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"回调消息协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.maa.plus/zh-cn/protocol/callback-schema.html"}],["meta",{"property":"og:site_name","content":"MAA 文档站"}],["meta",{"property":"og:title","content":"回调消息协议"}],["meta",{"property":"og:description","content":"注意 回调消息随版本更新飞速迭代中，本文档可能过时。如需获取最新内容可参考 C# 集成源码 回调函数原型 参数总览 int msg 消息类型 const char* details 消息详情，json 字符串，详见 字段解释 void* custom_arg 调用方自定义参数，会原样传出 AsstCreateEx 接口中的 custom_arg 参数，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://docs.maa.plus/ko-kr/protocol/callback-schema.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://docs.maa.plus/ja-jp/protocol/callback-schema.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://docs.maa.plus/en-us/protocol/callback-schema.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://docs.maa.plus/zh-tw/protocol/callback-schema.html"}]]},"readingTime":{"minutes":7.66,"words":2299},"git":{"createdTime":1759213271000},"autoDesc":true,"filePathRelative":"zh-cn/protocol/callback-schema.md","headers":[]}');export{j as comp,N as data};
