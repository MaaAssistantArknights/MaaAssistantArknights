import{_ as c,c as m,e as l,a as s,b as e,d as n,w as a,r as t,o as g}from"./app-C9soqA16.js";const u={},v={class:"demo-wrapper"},B={class:"demo-container"},A={class:"demo-wrapper"},b={class:"demo-container"},y={class:"vp-field-group"},f={class:"demo-wrapper"},F={class:"demo-container"};function w(x,i){const h=t("VPLink"),d=t("Plot"),k=t("ImageGrid"),r=t("VPField"),o=t("Badge"),p=t("Icon");return g(),m("div",null,[i[29]||(i[29]=l('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>本文档的目的在于指导文档编写者更好的使用主题提供的功能，以此达到更易读的效果。</p></div><p>我们的文档基于 <a href="https://github.com/vuejs/vuepress" target="_blank" rel="noopener noreferrer">vuepress</a> 构建，使用了 <a href="https://github.com/pengzhanbo/vuepress-theme-plume" target="_blank" rel="noopener noreferrer">vuepress-theme-plume</a> 主题，你也可以查看<a href="https://theme-plume.vuejs.press/" target="_blank" rel="noopener noreferrer">官方文档</a>来获取更加详细的说明，这里仅介绍一些常用的功能，或是经过我们自定义的功能</p><h2 id="本地部署" tabindex="-1"><a class="header-anchor" href="#本地部署"><span>本地部署</span></a></h2>',3)),s("ol",null,[s("li",null,[i[1]||(i[1]=e("安装 ",-1)),i[2]||(i[2]=s("a",{href:"https://pnpm.io/installation",target:"_blank",rel:"noopener noreferrer"},"pnpm",-1)),i[3]||(i[3]=e("，并参考 ",-1)),n(h,{href:"./development.md#github-pull-request-%E6%B5%81%E7%A8%8B%E7%AE%80%E8%BF%B0"},{default:a(()=>[...i[0]||(i[0]=[e("Pull Request 流程简述",-1)])]),_:1}),i[4]||(i[4]=e("将仓库克隆到本地。",-1))]),i[5]||(i[5]=s("li",null,[e("在 "),s("code",null,"docs"),e(" 目录下新建终端，运行 "),s("code",null,"pnpm i"),e(" 部署依赖。")],-1)),i[6]||(i[6]=s("li",null,[e("运行 "),s("code",null,"pnpm run dev"),e(" 进行部署。")],-1))]),i[30]||(i[30]=l(`<h2 id="容器与卡片" tabindex="-1"><a class="header-anchor" href="#容器与卡片"><span>容器与卡片</span></a></h2><p>该主题提供了关于提示、注释、信息、注意、警告和详情自定义容器的支持，我们可以利用这一特性来强调部分内容</p><p>容器的使用方法：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">容器类型</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">容器标题（可选）</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">你想写的内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:::</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或是使用 Github 风格语法</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#5C6370;--shiki-dark-font-style:inherit;">&gt; </span><span style="--shiki-light:#986801;--shiki-light-font-style:italic;--shiki-dark:#5C6370;--shiki-dark-font-style:inherit;">[</span><span style="--shiki-light:#4078F2;--shiki-light-font-style:italic;--shiki-dark:#61AFEF;--shiki-dark-font-style:inherit;">!容器类型</span><span style="--shiki-light:#986801;--shiki-light-font-style:italic;--shiki-dark:#5C6370;--shiki-dark-font-style:inherit;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#5C6370;--shiki-dark-font-style:inherit;">&gt; 你想写的内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>接受的容器内容与其默认标题如下：</p><ul><li><code>tip</code> 提示</li><li><code>note</code> 注</li><li><code>info</code> 相关信息</li><li><code>warning</code> 注意</li><li><code>danger</code> 警告</li><li><code>details</code> 详情</li><li><code>demo-warpper</code> <mark>特殊容器</mark></li></ul><h3 id="容器示例" tabindex="-1"><a class="header-anchor" href="#容器示例"><span>容器示例</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这是提示容器</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>这是注释容器</p></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>这是信息容器</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>这是注意容器</p></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>这是危险容器</p></div><details class="hint-container details"><summary>详情</summary><p>这是详情容器</p></details><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p>这是一个很特殊的容器</p></div></div><h2 id="马克笔标记" tabindex="-1"><a class="header-anchor" href="#马克笔标记"><span>马克笔标记</span></a></h2><p>你可以使用标记语法来对想要的内容进行标记，用于强调重点事项</p><p>使用方法：用 <code>==标记内容=={标记颜色（可选）}</code> 的语法进行标记，请注意两边需要有空格</p><p><strong>输入：</strong></p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-md"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MaaAssistantArknight 是由 ==很多猪== 开发的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>输出：</strong></p><p>MaaAssistantArknight 是由 <mark>很多猪</mark> 开发的</p><p>主题还内置了以下的配色方案：</p><ul><li><strong>default</strong>: <code>==Default==</code> - <mark>Default</mark></li><li><strong>info</strong>: <code>==Info=={.info}</code> - <mark class="info">Info</mark></li><li><strong>note</strong>: <code>==Note=={.note}</code> - <mark class="note">Note</mark></li><li><strong>tip</strong>: <code>==Tip=={.tip}</code> - <mark class="tip">Tip</mark></li><li><strong>warning</strong>: <code>==Warning=={.warning}</code> - <mark class="warning">Warning</mark></li><li><strong>danger</strong>: <code>==Danger=={.danger}</code> - <mark class="danger">Danger</mark></li><li><strong>caution</strong>: <code>==Caution=={.caution}</code> - <mark class="caution">Caution</mark></li><li><strong>important</strong>: <code>==Important=={.important}</code> - <mark class="important">Important</mark></li></ul><h2 id="隐藏文本" tabindex="-1"><a class="header-anchor" href="#隐藏文本"><span>隐藏文本</span></a></h2><p>出于某种原因，你可能需要将文档的某部分暂时涂黑，在这种情况下你可以使用隐藏文本功能</p><p>你可以使用 <code>!!需要隐秘的内容!!{配置（可选）}</code> 的语法来使用，默认效果如下</p>`,28)),s("p",null,[n(d,null,{default:a(()=>[...i[7]||(i[7]=[e("总感觉在看萌百（划掉",-1)])]),_:1})]),i[31]||(i[31]=s("p",null,"有以下配置可以使用",-1)),s("div",v,[i[17]||(i[17]=s("div",{class:"demo-head"},[s("div",{class:"demo-ctrl"},[s("i"),s("i"),s("i")])],-1)),s("div",B,[i[16]||(i[16]=l(`<p>输入：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 遮罩层效果 + 鼠标悬停：!!鼠标悬停看到我了!!{.mask .hover}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 遮罩层效果 + 点击：!!点击看到我了!!{.mask .click}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 文本模糊效果 + 鼠标悬停：!!鼠标悬停看到我了!!{.blur .hover}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 文本模糊效果 + 点击：!!点击看到我了!!{.blur .click}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p>`,3)),s("ul",null,[s("li",null,[i[9]||(i[9]=e("遮罩层效果 + 鼠标悬停：",-1)),n(d,{class:"mask hover"},{default:a(()=>[...i[8]||(i[8]=[e("鼠标悬停看到我了",-1)])]),_:1})]),s("li",null,[i[11]||(i[11]=e("遮罩层效果 + 点击：",-1)),n(d,{class:"mask click"},{default:a(()=>[...i[10]||(i[10]=[e("点击看到我了",-1)])]),_:1})]),s("li",null,[i[13]||(i[13]=e("文本模糊效果 + 鼠标悬停：",-1)),n(d,{class:"blur hover"},{default:a(()=>[...i[12]||(i[12]=[e("鼠标悬停看到我了",-1)])]),_:1})]),s("li",null,[i[15]||(i[15]=e("文本模糊效果 + 点击：",-1)),n(d,{class:"blur click"},{default:a(()=>[...i[14]||(i[14]=[e("点击看到我了",-1)])]),_:1})])])])]),i[32]||(i[32]=l(`<h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><p>当你正在写一个步骤化的教程时，有序列表可能会因为嵌套失去层次感，这种时候 <code>steps</code> 容器就是最好的选择</p><p>注意该容器用四个冒号来标记开始和结束，与常规的容器不同</p><p>输入：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:::: steps</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">1.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 步骤 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   \`\`\`ts</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   console.log(&#39;Hello World!&#39;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   \`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">2.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 步骤 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   这里是步骤 2 的相关内容</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">3.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 步骤 3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   ::: tip</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   提示容器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   :::</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">4.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 结束</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::::</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="vp-steps"><ol><li><p>步骤 1</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello World!&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>步骤 2</p><p>这里是步骤 2 的相关内容</p></li><li><p>步骤 3</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>提示容器</p></div></li><li><p>结束</p></li></ol></div><h2 id="智能图片容器" tabindex="-1"><a class="header-anchor" href="#智能图片容器"><span>智能图片容器</span></a></h2><p>我们基于主题提供的功能包装了一个图片容器。该容器能够在亮暗主题下自动显示对应主题的，同时支持自动布局</p><p>你可以在 markdown 正文中使用 <code>&lt;ImageGrid&gt;</code> 组件来调用该方法，具体的语法和效果如下</p>`,10)),s("div",A,[i[19]||(i[19]=s("div",{class:"demo-head"},[s("div",{class:"demo-ctrl"},[s("i"),s("i"),s("i")])],-1)),s("div",b,[i[18]||(i[18]=l(`<p>这是语法：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;ImageGrid :imageList=&quot;[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    light: &#39;images/zh-cn/readme/1-light.png&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    dark: &#39;images/zh-cn/readme/1-dark.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    light: &#39;images/zh-cn/readme/2-light.png&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    dark: &#39;images/zh-cn/readme/2-dark.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    light: &#39;images/zh-cn/readme/3-light.png&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    dark: &#39;images/zh-cn/readme/3-dark.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    light: &#39;images/zh-cn/readme/4-light.png&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    dark: &#39;images/zh-cn/readme/4-dark.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]&quot; /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是渲染效果：</p>`,3)),n(k,{imageList:[{light:"images/zh-cn/readme/1-light.png",dark:"images/zh-cn/readme/1-dark.png"},{light:"images/zh-cn/readme/2-light.png",dark:"images/zh-cn/readme/2-dark.png"}]})])]),i[33]||(i[33]=s("h2",{id:"字段容器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#字段容器"},[s("span",null,"字段容器")])],-1)),i[34]||(i[34]=s("p",null,[e("该语法较为复杂，请参考 "),s("a",{href:"https://theme-plume.vuejs.press/guide/markdown/field/",target:"_blank",rel:"noopener noreferrer"},"官方文档"),e(" 进行使用")],-1)),i[35]||(i[35]=s("p",null,"效果展示如下",-1)),s("div",y,[n(r,{name:"theme",required:"",type:"ThemeConfig","default-value":"{ base: '/' }"},{default:a(()=>[...i[20]||(i[20]=[s("p",null,"主题配置",-1)])]),_:1}),n(r,{name:"enabled",optional:"",type:"boolean","default-value":"true"},{default:a(()=>[...i[21]||(i[21]=[s("p",null,"是否启用",-1)])]),_:1}),n(r,{name:"callback",optional:"",type:"(...args: any[]) => void","default-value":"() => {}"},{default:a(()=>[n(o,{type:"tip",text:"v1.0.0 新增"}),i[22]||(i[22]=s("p",null,"回调函数",-1))]),_:1}),n(r,{name:"other",deprecated:"",type:"string"},{default:a(()=>[n(o,{type:"danger",text:"v0.9.0 弃用"}),i[23]||(i[23]=s("p",null,"已弃用属性",-1))]),_:1})]),i[36]||(i[36]=l(`<h2 id="图标" tabindex="-1"><a class="header-anchor" href="#图标"><span>图标</span></a></h2><p>该主题提供了图标支持，你可以在以下地方使用图标:</p><ul><li><p>文档标题: 在 frontmatter 中设置文档标题旁边的图标。</p></li><li><p>导航栏/侧边栏: 设置在导航栏与侧边栏中显示的图标。</p></li><li><p>文档内容: 在文档中使用图标。</p></li></ul><h3 id="设置文档的图标" tabindex="-1"><a class="header-anchor" href="#设置文档的图标"><span>设置文档的图标</span></a></h3><p>你可以在文档的 <a href="#frontmatter">frontmatter</a> 中使用 <code>icon</code> 来设置文档的图标。</p><p>这个图标会显示在文档标题的旁边。</p><details class="hint-container details"><summary>本文档的 frontmatter 设置</summary><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">icon: jam:write-f</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="在文档中使用图标" tabindex="-1"><a class="header-anchor" href="#在文档中使用图标"><span>在文档中使用图标</span></a></h3><p>你可以使用 <code>&lt;Icon /&gt;</code> 组件在 markdown 中添加图标。该组件有以下属性：</p><ul><li><code>icon</code> 接受图标关键字及 Url，如 <code>jam:write-f</code>，<code>ic:round-home</code> 等</li><li><code>color</code> 接受 css 风格的颜色值，如 <code>#fff</code>，<code>red</code> 等（该选项仅对 svg 图标有效）</li><li><code>size</code> 接受 css 风格的大小，如 <code>1rem</code>，<code>2em</code>，<code>100px</code> 等</li></ul>`,10)),s("div",f,[i[28]||(i[28]=s("div",{class:"demo-head"},[s("div",{class:"demo-ctrl"},[s("i"),s("i"),s("i")])],-1)),s("div",F,[i[27]||(i[27]=l(`<p>输入：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> home - &lt;Icon name=&quot;material-symbols:home&quot; color=&quot;currentColor&quot; size=&quot;1em&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> vscode - &lt;Icon name=&quot;skill-icons:vscode-dark&quot; size=&quot;2em&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> twitter - &lt;Icon name=&quot;skill-icons:twitter&quot; size=&quot;2em&quot; /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p>`,3)),s("ul",null,[s("li",null,[i[24]||(i[24]=e("home - ",-1)),n(p,{name:"material-symbols:home",color:"currentColor",size:"1em"})]),s("li",null,[i[25]||(i[25]=e("vscode - ",-1)),n(p,{name:"skill-icons:vscode-dark",size:"2em"})]),s("li",null,[i[26]||(i[26]=e("twitter - ",-1)),n(p,{name:"skill-icons:twitter",size:"2em"})])])])]),i[37]||(i[37]=l(`<h3 id="图标关键字的获取" tabindex="-1"><a class="header-anchor" href="#图标关键字的获取"><span>图标关键字的获取</span></a></h3><p>本文档使用的图标来自于 <a href="https://iconify.design/" target="_blank" rel="noopener noreferrer">iconify</a>，你可以在其给出的 <a href="https://icon-sets.iconify.design/" target="_blank" rel="noopener noreferrer">图标搜索界面</a> 中搜索你想要的图标，然后复制其关键字。</p><h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter"><span>Frontmatter</span></a></h2><p>Frontmatter 是 Markdown 文档开头一段用 <code>---</code> 包裹起来的内容，其内部使用 yml 语法。通过 Frontmatter，我们可以标识文档的编辑时间，使用的图标，分类，标签等等。</p><details class="hint-container details"><summary>示例</summary><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">date: 1919-08-10</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">icon: jam:write-f</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">order: 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 文档标题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>各字段含义如下：</p><ul><li><code>date</code>：文档的编辑时间</li><li><code>icon</code>：文档标题旁边的图标</li><li><code>order</code>：文档在侧边栏中的排序</li></ul>`,7))])}const z=c(u,[["render",w]]),E=JSON.parse('{"path":"/zh-cn/develop/documentation-guidelines.html","title":"文档编写指南","lang":"zh-CN","frontmatter":{"order":6,"icon":"jam:write-f","title":"文档编写指南","description":"提示 本文档的目的在于指导文档编写者更好的使用主题提供的功能，以此达到更易读的效果。 我们的文档基于 vuepress 构建，使用了 vuepress-theme-plume 主题，你也可以查看官方文档来获取更加详细的说明，这里仅介绍一些常用的功能，或是经过我们自定义的功能 本地部署 安装 pnpm，并参考 将仓库克隆到本地。 在 docs 目录下新建...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文档编写指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.maa.plus/zh-cn/develop/documentation-guidelines.html"}],["meta",{"property":"og:site_name","content":"MAA 文档站"}],["meta",{"property":"og:title","content":"文档编写指南"}],["meta",{"property":"og:description","content":"提示 本文档的目的在于指导文档编写者更好的使用主题提供的功能，以此达到更易读的效果。 我们的文档基于 vuepress 构建，使用了 vuepress-theme-plume 主题，你也可以查看官方文档来获取更加详细的说明，这里仅介绍一些常用的功能，或是经过我们自定义的功能 本地部署 安装 pnpm，并参考 将仓库克隆到本地。 在 docs 目录下新建..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://docs.maa.plus/ko-kr/develop/documentation-guidelines.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://docs.maa.plus/ja-jp/develop/documentation-guidelines.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://docs.maa.plus/en-us/develop/documentation-guidelines.html"}],["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://docs.maa.plus/zh-tw/develop/documentation-guidelines.html"}]]},"readingTime":{"minutes":5.34,"words":1603},"git":{"createdTime":1759213271000},"autoDesc":true,"filePathRelative":"zh-cn/develop/documentation-guidelines.md","headers":[]}');export{z as comp,E as data};
